{"version":3,"file":"ttf.js","sources":["ttf.js"],"sourcesContent":["/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n/*****************************************************************************\\\n *\n * The code in this file, although written from scratch, is influenced by the\n * TrueType parser/encoder in PDFKit -- http://pdfkit.org/ (a CoffeeScript\n * library for producing PDF files).\n *\n * PDFKit is (c) Devon Govett 2014 and released under the MIT License.\n *\n\\*****************************************************************************/\n\nimport { BinaryStream, ucs2decode } from \"./utils\";\n\nfunction hasOwnProperty(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction sortedKeys(obj) {\n    return Object.keys(obj).sort(function(a, b){ return a - b; }).map(parseFloat);\n}\n\n///\n\nfunction Directory(data) {\n    this.raw = data;\n    this.scalerType = data.readLong();\n    this.tableCount = data.readShort();\n    this.searchRange = data.readShort();\n    this.entrySelector = data.readShort();\n    this.rangeShift = data.readShort();\n\n    var tables = this.tables = {};\n    for (var i = 0; i < this.tableCount; ++i) {\n        var entry = {\n            tag      : data.readString(4),\n            checksum : data.readLong(),\n            offset   : data.readLong(),\n            length   : data.readLong()\n        };\n        tables[entry.tag] = entry;\n    }\n}\n\nDirectory.prototype = {\n\n    readTable: function(name, Ctor) {\n        var def = this.tables[name];\n        if (!def) {\n            throw new Error(\"Table \" + name + \" not found in directory\");\n        }\n        return (this[name] = def.table = new Ctor(this, def));\n    },\n\n    render: function(tables) {\n        var tableCount = Object.keys(tables).length;\n\n        var maxpow2 = Math.pow(2, Math.floor(Math.log(tableCount) / Math.LN2));\n        var searchRange = maxpow2 * 16;\n        var entrySelector = Math.floor(Math.log(maxpow2) / Math.LN2);\n        var rangeShift = tableCount * 16 - searchRange;\n\n        var out = BinaryStream();\n        out.writeLong(this.scalerType);\n        out.writeShort(tableCount);\n        out.writeShort(searchRange);\n        out.writeShort(entrySelector);\n        out.writeShort(rangeShift);\n\n        var directoryLength = tableCount * 16;\n        var offset = out.offset() + directoryLength;\n        var headOffset = null;\n        var tableData = BinaryStream();\n\n        for (var tag in tables) {\n            if (hasOwnProperty(tables, tag)) {\n                var table = tables[tag];\n\n                out.writeString(tag);\n                out.writeLong(this.checksum(table));\n                out.writeLong(offset);\n                out.writeLong(table.length);\n\n                tableData.write(table);\n                if (tag == \"head\") {\n                    headOffset = offset;\n                }\n                offset += table.length;\n\n                while (offset % 4) {\n                    tableData.writeByte(0);\n                    offset++;\n                }\n            }\n        }\n\n        out.write(tableData.get());\n        var sum = this.checksum(out.get());\n        var adjustment = 0xB1B0AFBA - sum;\n\n        out.offset(headOffset + 8);\n        out.writeLong(adjustment);\n        return out.get();\n    },\n\n    checksum: function(data) {\n        data = BinaryStream(data);\n        var sum = 0;\n        while (!data.eof()) {\n            sum += data.readLong();\n        }\n        return sum & 0xFFFFFFFF;\n    }\n};\n\nfunction deftable(methods) {\n    function Ctor(file, def) {\n        this.definition = def;\n        this.length = def.length;\n        this.offset = def.offset;\n        this.file = file;\n        this.rawData = file.raw;\n        this.parse(file.raw);\n    }\n    Ctor.prototype.raw = function() {\n        return this.rawData.slice(this.offset, this.length);\n    };\n    for (var i in methods) {\n        if (hasOwnProperty(methods, i)) {\n            Ctor[i] = Ctor.prototype[i] = methods[i];\n        }\n    }\n    return Ctor;\n}\n\nvar HeadTable = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n        this.version             = data.readLong();\n        this.revision            = data.readLong();\n        this.checkSumAdjustment  = data.readLong();\n        this.magicNumber         = data.readLong();\n        this.flags               = data.readShort();\n        this.unitsPerEm          = data.readShort();\n        this.created             = data.read(8);\n        this.modified            = data.read(8);\n\n        this.xMin = data.readShort_();\n        this.yMin = data.readShort_();\n        this.xMax = data.readShort_();\n        this.yMax = data.readShort_();\n\n        this.macStyle           = data.readShort();\n        this.lowestRecPPEM      = data.readShort();\n        this.fontDirectionHint  = data.readShort_();\n        this.indexToLocFormat   = data.readShort_();\n        this.glyphDataFormat    = data.readShort_();\n    },\n    render: function(indexToLocFormat) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeLong(this.revision);\n        out.writeLong(0);       // checksum adjustment; shall be computed later\n        out.writeLong(this.magicNumber);\n        out.writeShort(this.flags);\n        out.writeShort(this.unitsPerEm);\n        out.write(this.created);\n        out.write(this.modified);\n        out.writeShort_(this.xMin);\n        out.writeShort_(this.yMin);\n        out.writeShort_(this.xMax);\n        out.writeShort_(this.yMax);\n        out.writeShort(this.macStyle);\n        out.writeShort(this.lowestRecPPEM);\n        out.writeShort_(this.fontDirectionHint);\n        out.writeShort_(indexToLocFormat); // this will depend on the `loca` table\n        out.writeShort_(this.glyphDataFormat);\n        return out.get();\n    }\n});\n\nvar LocaTable = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n        var format = this.file.head.indexToLocFormat;\n        if (format === 0) {\n            this.offsets = data.times(this.length / 2, function(){\n                return 2 * data.readShort();\n            });\n        } else {\n            this.offsets = data.times(this.length / 4, data.readLong);\n        }\n    },\n    offsetOf: function(id) {\n        return this.offsets[id];\n    },\n    lengthOf: function(id) {\n        return this.offsets[id + 1] - this.offsets[id];\n    },\n    render: function(offsets) {\n        var out = BinaryStream();\n        var needsLongFormat = offsets[offsets.length - 1] > 0xFFFF;\n        for (var i = 0; i < offsets.length; ++i) {\n            if (needsLongFormat) {\n                out.writeLong(offsets[i]);\n            } else {\n                out.writeShort(offsets[i] / 2);\n            }\n        }\n        return {\n            format: needsLongFormat ? 1 : 0,\n            table: out.get()\n        };\n    }\n});\n\nvar HheaTable = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n\n        this.version              = data.readLong();\n        this.ascent               = data.readShort_();\n        this.descent              = data.readShort_();\n        this.lineGap              = data.readShort_();\n        this.advanceWidthMax      = data.readShort();\n        this.minLeftSideBearing   = data.readShort_();\n        this.minRightSideBearing  = data.readShort_();\n        this.xMaxExtent           = data.readShort_();\n        this.caretSlopeRise       = data.readShort_();\n        this.caretSlopeRun        = data.readShort_();\n        this.caretOffset          = data.readShort_();\n\n        data.skip(4 * 2);       // reserved\n\n        this.metricDataFormat     = data.readShort_();\n        this.numOfLongHorMetrics  = data.readShort();\n    },\n    render: function(ids) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeShort_(this.ascent);\n        out.writeShort_(this.descent);\n        out.writeShort_(this.lineGap);\n        out.writeShort(this.advanceWidthMax);\n        out.writeShort_(this.minLeftSideBearing);\n        out.writeShort_(this.minRightSideBearing);\n        out.writeShort_(this.xMaxExtent);\n        out.writeShort_(this.caretSlopeRise);\n        out.writeShort_(this.caretSlopeRun);\n        out.writeShort_(this.caretOffset);\n\n        out.write([ 0, 0, 0, 0, 0, 0, 0, 0 ]); // reserved bytes\n\n        out.writeShort_(this.metricDataFormat);\n        out.writeShort(ids.length);\n        return out.get();\n    }\n});\n\nvar MaxpTable = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n        this.version = data.readLong();\n        this.numGlyphs = data.readShort();\n        this.maxPoints = data.readShort();\n        this.maxContours = data.readShort();\n        this.maxComponentPoints = data.readShort();\n        this.maxComponentContours = data.readShort();\n        this.maxZones = data.readShort();\n        this.maxTwilightPoints = data.readShort();\n        this.maxStorage = data.readShort();\n        this.maxFunctionDefs = data.readShort();\n        this.maxInstructionDefs = data.readShort();\n        this.maxStackElements = data.readShort();\n        this.maxSizeOfInstructions = data.readShort();\n        this.maxComponentElements = data.readShort();\n        this.maxComponentDepth = data.readShort();\n    },\n    render: function(glyphIds) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeShort(glyphIds.length);\n        out.writeShort(this.maxPoints);\n        out.writeShort(this.maxContours);\n        out.writeShort(this.maxComponentPoints);\n        out.writeShort(this.maxComponentContours);\n        out.writeShort(this.maxZones);\n        out.writeShort(this.maxTwilightPoints);\n        out.writeShort(this.maxStorage);\n        out.writeShort(this.maxFunctionDefs);\n        out.writeShort(this.maxInstructionDefs);\n        out.writeShort(this.maxStackElements);\n        out.writeShort(this.maxSizeOfInstructions);\n        out.writeShort(this.maxComponentElements);\n        out.writeShort(this.maxComponentDepth);\n        return out.get();\n    }\n});\n\nvar HmtxTable = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n        var dir = this.file, hhea = dir.hhea;\n        this.metrics = data.times(hhea.numOfLongHorMetrics, function(){\n            return {\n                advance: data.readShort(),\n                lsb: data.readShort_()\n            };\n        });\n        var lsbCount = dir.maxp.numGlyphs - dir.hhea.numOfLongHorMetrics;\n        this.leftSideBearings = data.times(lsbCount, data.readShort_);\n    },\n    forGlyph: function(id) {\n        var metrics = this.metrics;\n        var n = metrics.length;\n        if (id < n) {\n            return metrics[id];\n        }\n        return {\n            advance: metrics[n - 1].advance,\n            lsb: this.leftSideBearings[id - n]\n        };\n    },\n    render: function(glyphIds) {\n        var out = BinaryStream();\n        for (var i = 0; i < glyphIds.length; ++i) {\n            var m = this.forGlyph(glyphIds[i]);\n            out.writeShort(m.advance);\n            out.writeShort_(m.lsb);\n        }\n        return out.get();\n    }\n});\n\nvar GlyfTable = (function(){\n\n    function SimpleGlyph(raw) {\n        this.raw = raw;\n    }\n    SimpleGlyph.prototype = {\n        compound: false,\n        render: function() {\n            return this.raw.get();\n        }\n    };\n\n    var ARG_1_AND_2_ARE_WORDS     = 0x0001;\n    var WE_HAVE_A_SCALE           = 0x0008;\n    var MORE_COMPONENTS           = 0x0020;\n    var WE_HAVE_AN_X_AND_Y_SCALE  = 0x0040;\n    var WE_HAVE_A_TWO_BY_TWO      = 0x0080;\n    //var WE_HAVE_INSTRUCTIONS      = 0x0100;\n\n    function CompoundGlyph(data) {\n        this.raw = data;\n        var ids = this.glyphIds = [];\n        var offsets = this.idOffsets = [];\n        while (true) {          // eslint-disable-line no-constant-condition\n            var flags = data.readShort();\n            offsets.push(data.offset());\n            ids.push(data.readShort());\n\n            if (!(flags & MORE_COMPONENTS)) {\n                break;\n            }\n\n            data.skip(flags & ARG_1_AND_2_ARE_WORDS ? 4 : 2);\n\n            if (flags & WE_HAVE_A_TWO_BY_TWO) {\n                data.skip(8);\n            } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n                data.skip(4);\n            } else if (flags & WE_HAVE_A_SCALE) {\n                data.skip(2);\n            }\n        }\n    }\n\n    CompoundGlyph.prototype = {\n        compound: true,\n        render: function(old2new) {\n            var out = BinaryStream(this.raw.get());\n            for (var i = 0; i < this.glyphIds.length; ++i) {\n                var id = this.glyphIds[i];\n                out.offset(this.idOffsets[i]);\n                out.writeShort(old2new[id]);\n            }\n            return out.get();\n        }\n    };\n\n    return deftable({\n        parse: function() {\n            this.cache = {};\n        },\n        glyphFor: function(id) {\n            var cache = this.cache;\n            if (hasOwnProperty(cache, id)) {\n                return cache[id];\n            }\n\n            var loca = this.file.loca;\n            var length = loca.lengthOf(id);\n\n            if (length === 0) {\n                return (cache[id] = null);\n            }\n\n            var data = this.rawData;\n            var offset = this.offset + loca.offsetOf(id);\n            var raw = BinaryStream(data.slice(offset, length));\n\n            var numberOfContours = raw.readShort_();\n            var xMin = raw.readShort_();\n            var yMin = raw.readShort_();\n            var xMax = raw.readShort_();\n            var yMax = raw.readShort_();\n\n            var glyph = cache[id] = numberOfContours == -1 ? new CompoundGlyph(raw) : new SimpleGlyph(raw);\n\n            glyph.numberOfContours = numberOfContours;\n            glyph.xMin = xMin;\n            glyph.yMin = yMin;\n            glyph.xMax = xMax;\n            glyph.yMax = yMax;\n\n            return glyph;\n        },\n        render: function(glyphs, oldIds, old2new) {\n            var out = BinaryStream(), offsets = [];\n            for (var i = 0; i < oldIds.length; ++i) {\n                var id = oldIds[i];\n                var glyph = glyphs[id];\n                offsets.push(out.offset());\n                if (glyph) {\n                    out.write(glyph.render(old2new));\n                }\n            }\n            offsets.push(out.offset());\n            return {\n                table: out.get(),\n                offsets: offsets\n            };\n        }\n    });\n\n}());\n\nvar NameTable = (function(){\n\n    function NameEntry(text, entry) {\n        this.text = text;\n        this.length = text.length;\n        this.platformID = entry.platformID;\n        this.platformSpecificID = entry.platformSpecificID;\n        this.languageID = entry.languageID;\n        this.nameID = entry.nameID;\n    }\n\n    return deftable({\n        parse: function(data) {\n            data.offset(this.offset);\n            data.readShort();   // format\n            var count = data.readShort();\n            var stringOffset = this.offset + data.readShort();\n            var nameRecords = data.times(count, function(){\n                return {\n                    platformID         : data.readShort(),\n                    platformSpecificID : data.readShort(),\n                    languageID         : data.readShort(),\n                    nameID             : data.readShort(),\n                    length             : data.readShort(),\n                    offset             : data.readShort() + stringOffset\n                };\n            });\n            var strings = this.strings = {};\n            for (var i = 0; i < nameRecords.length; ++i) {\n                var rec = nameRecords[i];\n                data.offset(rec.offset);\n                var text = data.readString(rec.length);\n                if (!strings[rec.nameID]) {\n                    strings[rec.nameID] = [];\n                }\n                strings[rec.nameID].push(new NameEntry(text, rec));\n            }\n            this.postscriptEntry = strings[6][0];\n            this.postscriptName = this.postscriptEntry.text.replace(/[^\\x20-\\x7F]/g, \"\");\n        },\n\n        render: function(psName) {\n            var strings = this.strings;\n            var strCount = 0;\n            for (var i in strings) {\n                if (hasOwnProperty(strings, i)) {\n                    strCount += strings[i].length;\n                }\n            }\n            var out = BinaryStream();\n            var strTable = BinaryStream();\n\n            out.writeShort(0);  // format\n            out.writeShort(strCount);\n            out.writeShort(6 + 12 * strCount); // stringOffset\n\n            for (i in strings) {\n                if (hasOwnProperty(strings, i)) {\n                    var list = i == 6 ? [\n                        new NameEntry(psName, this.postscriptEntry)\n                    ] : strings[i];\n                    for (var j = 0; j < list.length; ++j) {\n                        var str = list[j];\n                        out.writeShort(str.platformID);\n                        out.writeShort(str.platformSpecificID);\n                        out.writeShort(str.languageID);\n                        out.writeShort(str.nameID);\n                        out.writeShort(str.length);\n                        out.writeShort(strTable.offset());\n\n                        strTable.writeString(str.text);\n                    }\n                }\n            }\n\n            out.write(strTable.get());\n\n            return out.get();\n        }\n    });\n\n})();\n\nvar PostTable = (function(){\n\n    var POSTSCRIPT_GLYPHS = \".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat\".split(/\\s+/g);\n\n    return deftable({\n        parse: function(data) {\n            data.offset(this.offset);\n\n            this.format = data.readLong();\n            this.italicAngle = data.readFixed_();\n            this.underlinePosition = data.readShort_();\n            this.underlineThickness = data.readShort_();\n            this.isFixedPitch = data.readLong();\n            this.minMemType42 = data.readLong();\n            this.maxMemType42 = data.readLong();\n            this.minMemType1 = data.readLong();\n            this.maxMemType1 = data.readLong();\n\n            var numberOfGlyphs;\n\n            switch (this.format) {\n              case 0x00010000:\n              case 0x00030000:\n                break;\n\n              case 0x00020000:\n                numberOfGlyphs = data.readShort();\n                this.glyphNameIndex = data.times(numberOfGlyphs, data.readShort);\n                this.names = [];\n                var limit = this.offset + this.length;\n                while (data.offset() < limit) {\n                    this.names.push(data.readString(data.readByte()));\n                }\n                break;\n\n              case 0x00025000:\n                numberOfGlyphs = data.readShort();\n                this.offsets = data.read(numberOfGlyphs);\n                break;\n\n              case 0x00040000:\n                this.map = data.times(this.file.maxp.numGlyphs, data.readShort);\n                break;\n            }\n        },\n        glyphFor: function(code) {\n            switch (this.format) {\n              case 0x00010000:\n                return POSTSCRIPT_GLYPHS[code] || \".notdef\";\n\n              case 0x00020000:\n                var index = this.glyphNameIndex[code];\n                if (index < POSTSCRIPT_GLYPHS.length) {\n                    return POSTSCRIPT_GLYPHS[index];\n                }\n                return this.names[index - POSTSCRIPT_GLYPHS.length] || \".notdef\";\n\n              case 0x00025000:\n\n              case 0x00030000:\n                return \".notdef\";\n\n              case 0x00040000:\n                return this.map[code] || 0xFFFF;\n            }\n        },\n        render: function(mapping) {\n            if (this.format == 0x00030000) {\n                return this.raw();\n            }\n\n            // keep original header, but set format to 2.0\n            var out = BinaryStream(this.rawData.slice(this.offset, 32));\n            out.writeLong(0x00020000);\n            out.offset(32);\n\n            var indexes = [];\n            var strings = [];\n\n            for (var i = 0; i < mapping.length; ++i) {\n                var id = mapping[i];\n                var post = this.glyphFor(id);\n                var index = POSTSCRIPT_GLYPHS.indexOf(post);\n                if (index >= 0) {\n                    indexes.push(index);\n                } else {\n                    indexes.push(POSTSCRIPT_GLYPHS.length + strings.length);\n                    strings.push(post);\n                }\n            }\n\n            out.writeShort(mapping.length);\n\n            for (i = 0; i < indexes.length; ++i) {\n                out.writeShort(indexes[i]);\n            }\n\n            for (i = 0; i < strings.length; ++i) {\n                out.writeByte(strings[i].length);\n                out.writeString(strings[i]);\n            }\n\n            return out.get();\n        }\n    });\n})();\n\nvar CmapTable = (function(){\n\n    function CmapEntry(data, offset, codeMap) {\n        var self = this;\n        self.platformID = data.readShort();\n        self.platformSpecificID = data.readShort();\n        self.offset = offset + data.readLong();\n\n        data.saveExcursion(function(){\n            var code;\n            data.offset(self.offset);\n            self.format = data.readShort();\n\n            switch (self.format) {\n              case 0:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                for (var i = 0; i < 256; ++i) {\n                    codeMap[i] = data.readByte();\n                }\n                break;\n\n              case 4:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                var segCount = data.readShort() / 2;\n\n                data.skip(6);       // searchRange, entrySelector, rangeShift\n                var endCode = data.times(segCount, data.readShort);\n                data.skip(2);       // reserved pad\n                var startCode = data.times(segCount, data.readShort);\n                var idDelta = data.times(segCount, data.readShort_);\n                var idRangeOffset = data.times(segCount, data.readShort);\n\n                var count = (self.length + self.offset - data.offset()) / 2;\n                var glyphIds = data.times(count, data.readShort);\n\n                for (i = 0; i < segCount; ++i) {\n                    var start = startCode[i], end = endCode[i];\n                    for (code = start; code <= end; ++code) {\n                        var glyphId;\n                        if (idRangeOffset[i] === 0) {\n                            glyphId = code + idDelta[i];\n                        } else {\n                            ///\n                            // When non-zero, idRangeOffset contains for each segment the byte offset of the Glyph ID\n                            // into the glyphIds table, from the *current* `i` cell of idRangeOffset.  In other words,\n                            // this offset spans from the first into the second array.  This works, because the arrays\n                            // are consecutive in the TTF file:\n                            //\n                            //     [ ...idRangeOffset... ][ ...glyphIds... ]\n                            //       ...... 48 ......       .... ID ....\n                            //              ^----- 48 bytes -----^\n                            //\n                            // (but I can't stop wondering why is it not just a plain index, possibly incremented by 1\n                            // so that we can have that special `zero` value.)\n                            //\n                            // The elements of idRangeOffset are even numbers, because both arrays contain 16-bit words,\n                            // yet the offset is in bytes.  That is why we divide it by 2.  Then we subtract the\n                            // remaining segments (segCount-i), and add the code-start offset, to which we need to add\n                            // the corresponding delta to get the actual glyph ID.\n                            ///\n                            var index = idRangeOffset[i] / 2 - (segCount - i) + (code - start);\n                            glyphId = glyphIds[index] || 0;\n                            if (glyphId !== 0) {\n                                glyphId += idDelta[i];\n                            }\n                        }\n                        codeMap[code] = glyphId & 0xFFFF;\n                    }\n                }\n                break;\n\n              case 6:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                code = data.readShort();\n                var length = data.readShort();\n                while (length-- > 0) {\n                    codeMap[code++] = data.readShort();\n                }\n                break;\n\n              case 12:\n                data.readShort(); // reserved\n                self.length = data.readLong();\n                self.language = data.readLong();\n                var ngroups = data.readLong();\n                while (ngroups-- > 0) {\n                    code = data.readLong();\n                    var endCharCode = data.readLong();\n                    var glyphCode = data.readLong();\n                    while (code <= endCharCode) {\n                        codeMap[code++] = glyphCode++;\n                    }\n                }\n                break;\n\n              default:\n                if (window.console) {\n                    window.console.error(\"Unhandled CMAP format: \" + self.format);\n                }\n            }\n        });\n    }\n\n    function renderCharmap(ncid2ogid, ogid2ngid) {\n        var codes = sortedKeys(ncid2ogid);\n        var startCodes = [];\n        var endCodes = [];\n        var last = null;\n        var diff = null;\n\n        function new_gid(charcode) {\n            return ogid2ngid[ncid2ogid[charcode]];\n        }\n\n        for (var i = 0; i < codes.length; ++i) {\n            var code = codes[i];\n            var gid = new_gid(code);\n            var delta = gid - code;\n            if (last == null || delta !== diff) {\n                if (last) {\n                    endCodes.push(last);\n                }\n                startCodes.push(code);\n                diff = delta;\n            }\n            last = code;\n        }\n\n        if (last) {\n            endCodes.push(last);\n        }\n        endCodes.push(0xFFFF);\n        startCodes.push(0xFFFF);\n\n        var segCount = startCodes.length;\n        var segCountX2 = segCount * 2;\n        var searchRange = 2 * Math.pow(2, Math.floor(Math.log(segCount) / Math.LN2));\n        var entrySelector = Math.log(searchRange / 2) / Math.LN2;\n        var rangeShift = segCountX2 - searchRange;\n\n        var deltas = [];\n        var rangeOffsets = [];\n        var glyphIds = [];\n\n        for (i = 0; i < segCount; ++i) {\n            var startCode = startCodes[i];\n            var endCode = endCodes[i];\n            if (startCode == 0xFFFF) {\n                deltas.push(0);\n                rangeOffsets.push(0);\n                break;\n            }\n            var startGlyph = new_gid(startCode);\n            if (startCode - startGlyph >= 0x8000) {\n                deltas.push(0);\n                rangeOffsets.push(2 * (glyphIds.length + segCount - i));\n                for (var j = startCode; j <= endCode; ++j) {\n                    glyphIds.push(new_gid(j));\n                }\n            } else {\n                deltas.push(startGlyph - startCode);\n                rangeOffsets.push(0);\n            }\n        }\n\n        var out = BinaryStream();\n\n        out.writeShort(3);      // platformID\n        out.writeShort(1);      // platformSpecificID\n        out.writeLong(12);      // offset\n        out.writeShort(4);      // format\n        out.writeShort(16 + segCount * 8 + glyphIds.length * 2); // length\n        out.writeShort(0);      // language\n        out.writeShort(segCountX2);\n        out.writeShort(searchRange);\n        out.writeShort(entrySelector);\n        out.writeShort(rangeShift);\n\n        endCodes.forEach(out.writeShort);\n        out.writeShort(0);      // reserved pad\n        startCodes.forEach(out.writeShort);\n        deltas.forEach(out.writeShort_);\n        rangeOffsets.forEach(out.writeShort);\n        glyphIds.forEach(out.writeShort);\n\n        return out.get();\n    }\n\n    return deftable({\n        parse: function(data) {\n            var self = this;\n            var offset = self.offset;\n            data.offset(offset);\n            self.codeMap = {};\n            self.version = data.readShort();\n            var tableCount = data.readShort();\n            self.tables = data.times(tableCount, function(){\n                return new CmapEntry(data, offset, self.codeMap);\n            });\n        },\n        render: function(ncid2ogid, ogid2ngid) {\n            var out = BinaryStream();\n            out.writeShort(0);  // version\n            out.writeShort(1);  // tableCount\n            out.write(renderCharmap(ncid2ogid, ogid2ngid));\n            return out.get();\n        }\n    });\n\n})();\n\nvar OS2Table = deftable({\n    parse: function(data) {\n        data.offset(this.offset);\n        this.version = data.readShort();\n        this.averageCharWidth = data.readShort_();\n        this.weightClass = data.readShort();\n        this.widthClass = data.readShort();\n        this.type = data.readShort();\n        this.ySubscriptXSize = data.readShort_();\n        this.ySubscriptYSize = data.readShort_();\n        this.ySubscriptXOffset = data.readShort_();\n        this.ySubscriptYOffset = data.readShort_();\n        this.ySuperscriptXSize = data.readShort_();\n        this.ySuperscriptYSize = data.readShort_();\n        this.ySuperscriptXOffset = data.readShort_();\n        this.ySuperscriptYOffset = data.readShort_();\n        this.yStrikeoutSize = data.readShort_();\n        this.yStrikeoutPosition = data.readShort_();\n        this.familyClass = data.readShort_();\n\n        this.panose = data.times(10, data.readByte);\n        this.charRange = data.times(4, data.readLong);\n\n        this.vendorID = data.readString(4);\n        this.selection = data.readShort();\n        this.firstCharIndex = data.readShort();\n        this.lastCharIndex = data.readShort();\n\n        if (this.version > 0) {\n            this.ascent = data.readShort_();\n            this.descent = data.readShort_();\n            this.lineGap = data.readShort_();\n            this.winAscent = data.readShort();\n            this.winDescent = data.readShort();\n            this.codePageRange = data.times(2, data.readLong);\n\n            if (this.version > 1) {\n                this.xHeight = data.readShort();\n                this.capHeight = data.readShort();\n                this.defaultChar = data.readShort();\n                this.breakChar = data.readShort();\n                this.maxContext = data.readShort();\n            }\n        }\n    },\n    render: function() {\n        return this.raw();\n    }\n});\n\nvar subsetTag = 100000;\n\nfunction nextSubsetTag() {\n    var ret = \"\", n = String(subsetTag);\n    for (var i = 0; i < n.length; ++i) {\n        ret += String.fromCharCode(n.charCodeAt(i) - 48 + 65);\n    }\n    ++subsetTag;\n    return ret;\n}\n\nfunction Subfont(font) {\n    this.font = font;\n    this.subset = {};\n    this.unicodes = {};\n    this.ogid2ngid = { 0: 0 };\n    this.ngid2ogid = { 0: 0 };\n    this.ncid2ogid = {};\n    this.next = this.firstChar = 1;\n    this.nextGid = 1;\n    this.psName = nextSubsetTag() + \"+\" + this.font.psName;\n}\n\nSubfont.prototype = {\n    use: function(ch) {\n        var self = this;\n        if (typeof ch == \"string\") {\n            return ucs2decode(ch).reduce(function(ret, code){\n                return ret + String.fromCharCode(self.use(code));\n            }, \"\");\n        }\n        var code = self.unicodes[ch];\n        if (!code) {\n            code = self.next++;\n            self.subset[code] = ch;\n            self.unicodes[ch] = code;\n\n            // generate new GID (glyph ID) and maintain newGID ->\n            // oldGID and back mappings\n            var old_gid = self.font.cmap.codeMap[ch];\n            if (old_gid) {\n                self.ncid2ogid[code] = old_gid;\n                if (self.ogid2ngid[old_gid] == null) {\n                    var new_gid = self.nextGid++;\n                    self.ogid2ngid[old_gid] = new_gid;\n                    self.ngid2ogid[new_gid] = old_gid;\n                }\n            }\n        }\n        return code;\n    },\n    encodeText: function(text) {\n        return this.use(text);\n    },\n    glyphIds: function() {\n        return sortedKeys(this.ogid2ngid);\n    },\n    glyphsFor: function(glyphIds, result) {\n        if (!result) {\n            result = {};\n        }\n        for (var i = 0; i < glyphIds.length; ++i) {\n            var id = glyphIds[i];\n            if (!result[id]) {\n                var glyph = result[id] = this.font.glyf.glyphFor(id);\n                if (glyph && glyph.compound) {\n                    this.glyphsFor(glyph.glyphIds, result);\n                }\n            }\n        }\n        return result;\n    },\n    render: function() {\n        var glyphs = this.glyphsFor(this.glyphIds());\n\n        // add missing sub-glyphs\n        for (var old_gid in glyphs) {\n            if (hasOwnProperty(glyphs, old_gid)) {\n                old_gid = parseInt(old_gid, 10);\n                if (this.ogid2ngid[old_gid] == null) {\n                    var new_gid = this.nextGid++;\n                    this.ogid2ngid[old_gid] = new_gid;\n                    this.ngid2ogid[new_gid] = old_gid;\n                }\n            }\n        }\n\n        // must obtain old_gid_ids in an order matching sorted\n        // new_gid_ids\n        var new_gid_ids = sortedKeys(this.ngid2ogid);\n        var old_gid_ids = new_gid_ids.map(function(id){\n            return this.ngid2ogid[id];\n        }, this);\n\n        var font = this.font;\n        var glyf = font.glyf.render(glyphs, old_gid_ids, this.ogid2ngid);\n        var loca = font.loca.render(glyf.offsets);\n\n        this.lastChar = this.next - 1;\n\n        var tables = {\n            \"cmap\" : CmapTable.render(this.ncid2ogid, this.ogid2ngid),\n            \"glyf\" : glyf.table,\n            \"loca\" : loca.table,\n            \"hmtx\" : font.hmtx.render(old_gid_ids),\n            \"hhea\" : font.hhea.render(old_gid_ids),\n            \"maxp\" : font.maxp.render(old_gid_ids),\n            \"post\" : font.post.render(old_gid_ids),\n            \"name\" : font.name.render(this.psName),\n            \"head\" : font.head.render(loca.format),\n            \"OS/2\" : font.os2.render()\n        };\n\n        return this.font.directory.render(tables);\n    },\n    cidToGidMap: function() {\n        var out = BinaryStream(), len = 0;\n        for (var cid = this.firstChar; cid < this.next; ++cid) {\n            while (len < cid) {\n                out.writeShort(0);\n                len++;\n            }\n            var old_gid = this.ncid2ogid[cid];\n            if (old_gid) {\n                var new_gid = this.ogid2ngid[old_gid];\n                out.writeShort(new_gid);\n            } else {\n                out.writeShort(0);\n            }\n            len++;\n        }\n        return out.get();\n    }\n};\n\nfunction TTFFont(rawData, name) {\n    var self = this;\n    var data = self.contents = BinaryStream(rawData);\n    if (data.readString(4) == \"ttcf\") {\n        var offset;\n        const parse = function() {\n            data.offset(offset);\n            self.parse();\n        };\n        if (!name) {\n            throw new Error(\"Must specify a name for TTC files\");\n        }\n        data.readLong();        // version\n        var numFonts = data.readLong();\n        for (var i = 0; i < numFonts; ++i) {\n            offset = data.readLong();\n            data.saveExcursion(parse);\n            if (self.psName == name) {\n                return;\n            }\n        }\n        throw new Error(\"Font \" + name + \" not found in collection\");\n    } else {\n        data.offset(0);\n        self.parse();\n    }\n}\n\nTTFFont.prototype = {\n    parse: function() {\n        var dir = this.directory = new Directory(this.contents);\n\n        this.head = dir.readTable(\"head\", HeadTable);\n        this.loca = dir.readTable(\"loca\", LocaTable);\n        this.hhea = dir.readTable(\"hhea\", HheaTable);\n        this.maxp = dir.readTable(\"maxp\", MaxpTable);\n        this.hmtx = dir.readTable(\"hmtx\", HmtxTable);\n        this.glyf = dir.readTable(\"glyf\", GlyfTable);\n        this.name = dir.readTable(\"name\", NameTable);\n        this.post = dir.readTable(\"post\", PostTable);\n        this.cmap = dir.readTable(\"cmap\", CmapTable);\n        this.os2  = dir.readTable(\"OS/2\", OS2Table);\n\n        this.psName = this.name.postscriptName;\n        this.ascent = this.os2.ascent || this.hhea.ascent;\n        this.descent = this.os2.descent || this.hhea.descent;\n        this.lineGap = this.os2.lineGap || this.hhea.lineGap;\n        this.scale = 1000 / this.head.unitsPerEm;\n    },\n    widthOfGlyph: function(glyph) {\n        return this.hmtx.forGlyph(glyph).advance * this.scale;\n    },\n    makeSubset: function() {\n        return new Subfont(this);\n    }\n};\n\nexport { TTFFont };\n"],"names":["this","const"],"mappings":"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"}