{"version":3,"file":"shape-map.js","sources":["shape-map.js"],"sourcesContent":["import Point from '../geometry/point';\nimport { last } from '../util';\n\nconst ShapeMap = {\n    l: function(path, options) {\n        const { parameters, position } = options;\n\n        for (let i = 0; i < parameters.length; i += 2) {\n            let point = new Point(parameters[i], parameters[i + 1]);\n\n            if (options.isRelative) {\n                point.translateWith(position);\n            }\n\n            path.lineTo(point.x, point.y);\n\n            position.x = point.x;\n            position.y = point.y;\n        }\n    },\n\n    c: function(path, options) {\n        const { parameters, position } = options;\n\n        for (let i = 0; i < parameters.length; i += 6) {\n            let controlOut = new Point(parameters[i], parameters[i + 1]);\n            let controlIn = new Point(parameters[i + 2], parameters[i + 3]);\n            let point = new Point(parameters[i + 4], parameters[i + 5]);\n            if (options.isRelative) {\n                controlIn.translateWith(position);\n                controlOut.translateWith(position);\n                point.translateWith(position);\n            }\n\n            path.curveTo(controlOut, controlIn, point);\n\n            position.x = point.x;\n            position.y = point.y;\n        }\n    },\n\n    v: function(path, options) {\n        const value = options.isRelative ? 0 : options.position.x;\n\n        toLineParamaters(options.parameters, true, value);\n        this.l(path, options);\n    },\n\n    h: function(path, options) {\n        const value = options.isRelative ? 0 : options.position.y;\n\n        toLineParamaters(options.parameters, false, value);\n        this.l(path, options);\n    },\n\n    a: function(path, options) {\n        const { parameters, position } = options;\n\n        for (let i = 0; i < parameters.length; i += 7) {\n            const radiusX = parameters[i];\n            const radiusY = parameters[i + 1];\n            const rotation = parameters[i + 2];\n            const largeArc = parameters[i + 3];\n            const swipe = parameters[i + 4];\n            const endPoint = new Point(parameters[i + 5], parameters[i + 6]);\n\n            if (options.isRelative) {\n                endPoint.translateWith(position);\n            }\n            if (position.x !== endPoint.x || position.y !== endPoint.y) {\n                path.arcTo(endPoint, radiusX, radiusY, largeArc, swipe, rotation);\n\n                position.x = endPoint.x;\n                position.y = endPoint.y;\n            }\n        }\n    },\n\n    s: function(path, options) {\n        const { parameters, position, previousCommand } = options;\n        let lastControlIn;\n\n        if (previousCommand === \"s\" || previousCommand === \"c\") {\n            lastControlIn = last(last(path.paths).segments).controlIn();\n        }\n\n        for (let i = 0; i < parameters.length; i += 4) {\n            let controlIn = new Point(parameters[i], parameters[i + 1]);\n            let endPoint = new Point(parameters[i + 2], parameters[i + 3]);\n            let controlOut;\n\n            if (options.isRelative) {\n                controlIn.translateWith(position);\n                endPoint.translateWith(position);\n            }\n\n            if (lastControlIn) {\n                controlOut = reflectionPoint(lastControlIn, position);\n            } else {\n                controlOut = position.clone();\n            }\n\n            lastControlIn = controlIn;\n\n            path.curveTo(controlOut, controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    },\n\n    q: function(path, options) {\n        const { parameters, position } = options;\n\n        for (let i = 0; i < parameters.length; i += 4) {\n            let controlPoint = new Point(parameters[i], parameters[i + 1]);\n            let endPoint = new Point(parameters[i + 2], parameters[i + 3]);\n\n            if (options.isRelative) {\n                controlPoint.translateWith(position);\n                endPoint.translateWith(position);\n            }\n\n            let cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n            path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    },\n\n    t: function(path, options) {\n        const { parameters, position, previousCommand } = options;\n        let controlPoint;\n\n        if (previousCommand === \"q\" || previousCommand === \"t\") {\n            let lastSegment = last(last(path.paths).segments);\n            controlPoint = lastSegment.controlIn().clone()\n                .translateWith(position.scaleCopy(-1 / 3))\n                .scale(3 / 2);\n        }\n\n        for (let i = 0; i < parameters.length; i += 2) {\n            let endPoint = new Point(parameters[i], parameters[i + 1]);\n            if (options.isRelative) {\n                endPoint.translateWith(position);\n            }\n\n            if (controlPoint) {\n                controlPoint = reflectionPoint(controlPoint, position);\n            } else {\n                controlPoint = position.clone();\n            }\n\n            let cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n            path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    }\n};\n\nfunction toLineParamaters(parameters, isVertical, value) {\n    const insertPosition = isVertical ? 0 : 1;\n\n    for (let i = 0; i < parameters.length; i += 2) {\n        parameters.splice(i + insertPosition, 0, value);\n    }\n}\n\nfunction reflectionPoint(point, center) {\n    if (point && center) {\n        return center.scaleCopy(2).translate(-point.x, -point.y);\n    }\n}\n\nconst third = 1 / 3;\n\nfunction quadraticToCubicControlPoints(position, controlPoint, endPoint) {\n    const scaledPoint = controlPoint.clone().scale(2 / 3);\n    return {\n        controlOut: scaledPoint.clone().translateWith(position.scaleCopy(third)),\n        controlIn: scaledPoint.translateWith(endPoint.scaleCopy(third))\n    };\n}\n\nexport default ShapeMap;"],"names":["const","let"],"mappings":"AAAA,OAAO,KAAK,MAAM,mBAAmB,CAAC;AACtC,SAAS,IAAI,QAAQ,SAAS,CAAC;;AAE/BA,GAAK,CAAC,QAAQ,GAAG;IACb,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ,oBAAtB,AAAY,AAAU,AAAE,AAAU,AAAC;;QAEzC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CA,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;YAExD,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACjC;;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;YAE9B,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACrB,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACxB;KACJ;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ,oBAAtB,AAAY,AAAU,AAAE,AAAU,AAAC;;QAEzC,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CA,GAAG,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7DA,GAAG,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChEA,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAClC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACnC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACjC;;YAED,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;YAE3C,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACrB,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACxB;KACJ;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvBD,GAAK,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAE1D,gBAAgB,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACzB;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvBA,GAAK,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAE1D,gBAAgB,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACzB;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ,oBAAtB,AAAY,AAAU,AAAE,AAAU,AAAC;;QAEzC,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CD,GAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC9BA,GAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClCA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACnCA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACnCA,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChCA,GAAK,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;YAEjE,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACpC;YACD,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE;gBACxD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;;gBAElE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACxB,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;aAC3B;SACJ;KACJ;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,eAAe,2BAAvC,AAAY,AAAU,AAAiB,AAAE,AAAU,AAAC;QAC1DC,GAAG,CAAC,aAAa,CAAC;;QAElB,IAAI,eAAe,KAAK,GAAG,IAAI,eAAe,KAAK,GAAG,EAAE;YACpD,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;SAC/D;;QAED,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CA,GAAG,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5DA,GAAG,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/DA,GAAG,CAAC,UAAU,CAAC;;YAEf,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAClC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACpC;;YAED,IAAI,aAAa,EAAE;gBACf,UAAU,GAAG,eAAe,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;aACzD,MAAM;gBACH,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;aACjC;;YAED,aAAa,GAAG,SAAS,CAAC;;YAE1B,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;;YAE9C,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACxB,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC3B;KACJ;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ,oBAAtB,AAAY,AAAU,AAAE,AAAU,AAAC;;QAEzC,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CA,GAAG,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/DA,GAAG,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;YAE/D,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACrC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACpC;;YAEDA,GAAG,CAAC,kBAAkB,GAAG,6BAA6B,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;;YAEzF,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;YAEpF,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACxB,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC3B;KACJ;;IAED,CAAC,EAAE,SAAS,IAAI,EAAE,OAAO,EAAE;QACvB,AAAK,AAAG,IAAA,UAAU;QAAE,IAAA,QAAQ;QAAE,IAAA,eAAe,2BAAvC,AAAY,AAAU,AAAiB,AAAE,AAAU,AAAC;QAC1DA,GAAG,CAAC,YAAY,CAAC;;QAEjB,IAAI,eAAe,KAAK,GAAG,IAAI,eAAe,KAAK,GAAG,EAAE;YACpDA,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClD,YAAY,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE;iBACzC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACrB;;QAED,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3CA,GAAG,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACpC;;YAED,IAAI,YAAY,EAAE;gBACd,YAAY,GAAG,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;aAC1D,MAAM;gBACH,YAAY,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;aACnC;;YAEDA,GAAG,CAAC,kBAAkB,GAAG,6BAA6B,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;;YAEzF,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;YAEpF,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACxB,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC3B;KACJ;CACJ,CAAC;;AAEF,SAAS,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE;IACrDD,GAAK,CAAC,cAAc,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;;IAE1C,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;KACnD;CACJ;;AAED,SAAS,eAAe,CAAC,KAAK,EAAE,MAAM,EAAE;IACpC,IAAI,KAAK,IAAI,MAAM,EAAE;QACjB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5D;CACJ;;AAEDD,GAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEpB,SAAS,6BAA6B,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE;IACrEA,GAAK,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,OAAO;QACH,UAAU,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxE,SAAS,EAAE,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAClE,CAAC;CACL;;AAED,eAAe,QAAQ"}