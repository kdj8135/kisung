{"version":3,"file":"path-parser.js","sources":["path-parser.js"],"sourcesContent":["import { Class } from '../common';\nimport MultiPath from '../shapes/multi-path';\nimport Path from '../shapes/path';\nimport Point from '../geometry/point';\nimport ShapeMap from './shape-map';\n\nconst SEGMENT_REGEX = /([a-df-z]{1})([^a-df-z]*)(z)?/gi;\nconst SPLIT_REGEX = /[,\\s]?([+\\-]?(?:\\d*\\.\\d+|\\d+)(?:[eE][+\\-]?\\d+)?)/g;\nconst MOVE = \"m\";\nconst CLOSE = \"z\";\n\nfunction parseParameters(str) {\n    const parameters = [];\n    str.replace(SPLIT_REGEX, function(match, number) {\n        parameters.push(parseFloat(number));\n    });\n    return parameters;\n}\n\nclass PathParser extends Class {\n\n    parse(str, options) {\n        const multiPath = new MultiPath(options);\n        const position = new Point();\n        let previousCommand;\n\n        str.replace(SEGMENT_REGEX, (match, element, params, closePath) => {\n            let command = element.toLowerCase();\n            const isRelative = command === element;\n            const parameters = parseParameters(params.trim());\n\n            if (command === MOVE) {\n                if (isRelative) {\n                    position.x += parameters[0];\n                    position.y += parameters[1];\n                } else {\n                    position.x = parameters[0];\n                    position.y = parameters[1];\n                }\n\n                multiPath.moveTo(position.x, position.y);\n\n                if (parameters.length > 2) {\n                    command = \"l\";\n                    parameters.splice(0, 2);\n                }\n            }\n\n            if (ShapeMap[command]) {\n                ShapeMap[command](\n                    multiPath, {\n                        parameters: parameters,\n                        position: position,\n                        isRelative: isRelative,\n                        previousCommand: previousCommand\n                    }\n                );\n\n                if (closePath && closePath.toLowerCase() === CLOSE) {\n                    multiPath.close();\n                }\n            } else if (command !== MOVE) {\n                throw new Error(\"Error while parsing SVG path. Unsupported command: \" + command);\n            }\n\n            previousCommand = command;\n        });\n\n        return multiPath;\n    }\n}\n\nPathParser.current = new PathParser();\n\nPath.parse = function(str, options) {\n    return PathParser.current.parse(str, options);\n};\n\nexport default PathParser;"],"names":["const","let"],"mappings":"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"}