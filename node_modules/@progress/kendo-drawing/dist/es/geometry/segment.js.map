{"version":3,"file":"segment.js","sources":["segment.js"],"sourcesContent":["import ObserversMixin from '../mixins/observers-mixin';\nimport { Class } from '../common';\nimport definePointAccessors from '../accessors/define-point-accessors';\nimport Rect from './rect';\nimport Point from './point';\nimport transform from './transform';\nimport { deg, MIN_NUM, MAX_NUM } from '../util';\nimport isOutOfEndPoint from './math/is-out-of-end-point';\nimport calculateCurveAt from './math/calculate-curve-at';\nimport hasRootsInRange from './math/has-roots-in-range';\nimport curveIntersectionsCount from './math/curve-intersections-count';\nimport lineIntersectionsCount from './math/line-intersections-count';\n\nclass Segment extends Class {\n\n    constructor(anchor, controlIn, controlOut) {\n        super();\n\n        this.anchor(anchor || new Point());\n        this.controlIn(controlIn);\n        this.controlOut(controlOut);\n    }\n\n    bboxTo(toSegment, matrix) {\n        const segmentAnchor = this.anchor().transformCopy(matrix);\n        const toSegmentAnchor = toSegment.anchor().transformCopy(matrix);\n        let rect;\n\n        if (this.controlOut() && toSegment.controlIn()) {\n            rect = this._curveBoundingBox(\n                segmentAnchor, this.controlOut().transformCopy(matrix),\n                toSegment.controlIn().transformCopy(matrix), toSegmentAnchor\n            );\n        } else {\n            rect = this._lineBoundingBox(segmentAnchor, toSegmentAnchor);\n        }\n\n        return rect;\n    }\n\n    _lineBoundingBox(p1, p2) {\n        return Rect.fromPoints(p1, p2);\n    }\n\n    _curveBoundingBox(p1, cp1, cp2, p2) {\n        const points = [ p1, cp1, cp2, p2 ];\n        const extremesX = this._curveExtremesFor(points, \"x\");\n        const extremesY = this._curveExtremesFor(points, \"y\");\n        const xLimits = arrayLimits([ extremesX.min, extremesX.max, p1.x, p2.x ]);\n        const yLimits = arrayLimits([ extremesY.min, extremesY.max, p1.y, p2.y ]);\n\n        return Rect.fromPoints(new Point(xLimits.min, yLimits.min), new Point(xLimits.max, yLimits.max));\n    }\n\n    _curveExtremesFor(points, field) {\n        const extremes = this._curveExtremes(\n            points[0][field], points[1][field],\n            points[2][field], points[3][field]\n        );\n\n        return {\n            min: calculateCurveAt(extremes.min, field, points),\n            max: calculateCurveAt(extremes.max, field, points)\n        };\n    }\n\n    _curveExtremes(x1, x2, x3, x4) {\n        const a = x1 - 3 * x2 + 3 * x3 - x4;\n        const b = - 2 * (x1 - 2 * x2 + x3);\n        const c = x1 - x2;\n        const sqrt = Math.sqrt(b * b - 4 * a * c);\n        let t1 = 0;\n        let t2 = 1;\n\n        if (a === 0) {\n            if (b !== 0) {\n                t1 = t2 = -c / b;\n            }\n        } else if (!isNaN(sqrt)) {\n            t1 = (- b + sqrt) / (2 * a);\n            t2 = (- b - sqrt) / (2 * a);\n        }\n\n        let min = Math.max(Math.min(t1, t2), 0);\n        if (min < 0 || min > 1) {\n            min = 0;\n        }\n\n        let max = Math.min(Math.max(t1, t2), 1);\n        if (max > 1 || max < 0) {\n            max = 1;\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    _intersectionsTo(segment, point) {\n        let intersectionsCount;\n        if (this.controlOut() && segment.controlIn()) {\n            intersectionsCount = curveIntersectionsCount([ this.anchor(), this.controlOut(), segment.controlIn(), segment.anchor() ], point, this.bboxTo(segment));\n        } else {\n            intersectionsCount = lineIntersectionsCount(this.anchor(), segment.anchor(), point);\n        }\n        return intersectionsCount;\n    }\n\n    _isOnCurveTo(segment, point, width, endSegment) {\n        const bbox = this.bboxTo(segment).expand(width, width);\n        if (bbox.containsPoint(point)) {\n            const p1 = this.anchor();\n            const p2 = this.controlOut();\n            const p3 = segment.controlIn();\n            const p4 = segment.anchor();\n\n            if (endSegment === \"start\" && p1.distanceTo(point) <= width) {\n                return !isOutOfEndPoint(p1, p2, point);\n            } else if (endSegment === \"end\" && p4.distanceTo(point) <= width) {\n                return !isOutOfEndPoint(p4, p3, point);\n            }\n\n            //the approach is not entirely correct but is close and the alternatives are solving a 6th degree polynomial or testing the segment points\n            const points = [ p1, p2, p3, p4 ];\n            if (hasRootsInRange(points, point, \"x\", \"y\", width) || hasRootsInRange(points, point, \"y\", \"x\", width)) {\n                return true;\n            }\n            const rotation = transform().rotate(45, point);\n            const rotatedPoints = [ p1.transformCopy(rotation), p2.transformCopy(rotation), p3.transformCopy(rotation), p4.transformCopy(rotation) ];\n            return hasRootsInRange(rotatedPoints, point, \"x\", \"y\", width) || hasRootsInRange(rotatedPoints, point, \"y\", \"x\", width);\n        }\n    }\n\n    _isOnLineTo(segment, point, width) {\n        const p1 = this.anchor();\n        const p2 = segment.anchor();\n        const angle = deg(Math.atan2(p2.y - p1.y, p2.x - p1.x));\n        const rect = new Rect([ p1.x, p1.y - width / 2 ], [ p1.distanceTo(p2), width ]);\n        return rect.containsPoint(point.transformCopy(transform().rotate(-angle, p1)));\n    }\n\n    _isOnPathTo(segment, point, width, endSegment) {\n        let isOnPath;\n        if (this.controlOut() && segment.controlIn()) {\n            isOnPath = this._isOnCurveTo(segment, point, width / 2, endSegment);\n        } else {\n            isOnPath = this._isOnLineTo(segment, point, width);\n        }\n        return isOnPath;\n    }\n}\n\ndefinePointAccessors(Segment.prototype, [ \"anchor\", \"controlIn\", \"controlOut\" ]);\nObserversMixin.extend(Segment.prototype);\n\nfunction arrayLimits(arr) {\n    let length = arr.length;\n    let min = MAX_NUM;\n    let max = MIN_NUM;\n\n    for (let i = 0; i < length; i ++) {\n        max = Math.max(max, arr[i]);\n        min = Math.min(min, arr[i]);\n    }\n\n    return {\n        min: min,\n        max: max\n    };\n}\n\nexport default Segment;"],"names":["super","const","let"],"mappings":"AAAA,OAAO,cAAc,MAAM,2BAA2B,CAAC;AACvD,SAAS,KAAK,QAAQ,WAAW,CAAC;AAClC,OAAO,oBAAoB,MAAM,qCAAqC,CAAC;AACvE,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,SAAS,GAAG,EAAE,OAAO,EAAE,OAAO,QAAQ,SAAS,CAAC;AAChD,OAAO,eAAe,MAAM,4BAA4B,CAAC;AACzD,OAAO,gBAAgB,MAAM,2BAA2B,CAAC;AACzD,OAAO,eAAe,MAAM,2BAA2B,CAAC;AACxD,OAAO,uBAAuB,MAAM,kCAAkC,CAAC;AACvE,OAAO,sBAAsB,MAAM,iCAAiC,CAAC;;AAErE,IAAM,OAAO,GAAc;IAAC,AAExB,gBAAW,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE;QACvCA,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC/B;;;;4CAAA;;IAED,kBAAA,MAAM,mBAAA,CAAC,SAAS,EAAE,MAAM,EAAE;QACtBC,GAAK,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC1DA,GAAK,CAAC,eAAe,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACjEC,GAAG,CAAC,IAAI,CAAC;;QAET,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,SAAS,CAAC,SAAS,EAAE,EAAE;YAC5C,IAAI,GAAG,IAAI,CAAC,iBAAiB;gBACzB,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC;gBACtD,SAAS,CAAC,SAAS,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,eAAe;aAC/D,CAAC;SACL,MAAM;YACH,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;SAChE;;QAED,OAAO,IAAI,CAAC;KACf,CAAA;;IAED,kBAAA,gBAAgB,6BAAA,CAAC,EAAE,EAAE,EAAE,EAAE;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;KAClC,CAAA;;IAED,kBAAA,iBAAiB,8BAAA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;QAChCD,GAAK,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QACpCA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACtDA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACtDA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1EA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;QAE1E,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KACpG,CAAA;;IAED,kBAAA,iBAAiB,8BAAA,CAAC,MAAM,EAAE,KAAK,EAAE;QAC7BA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc;YAChC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAClC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACrC,CAAC;;QAEF,OAAO;YACH,GAAG,EAAE,gBAAgB,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC;YAClD,GAAG,EAAE,gBAAgB,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC;SACrD,CAAC;KACL,CAAA;;IAED,kBAAA,cAAc,2BAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC3BA,GAAK,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QACpCA,GAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACnCA,GAAK,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAClBA,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1CC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACXA,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;;QAEX,IAAI,CAAC,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACpB;SACJ,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACrB,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B;;QAEDA,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;YACpB,GAAG,GAAG,CAAC,CAAC;SACX;;QAEDA,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;YACpB,GAAG,GAAG,CAAC,CAAC;SACX;;QAED,OAAO;YACH,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACX,CAAC;KACL,CAAA;;IAED,kBAAA,gBAAgB,6BAAA,CAAC,OAAO,EAAE,KAAK,EAAE;QAC7BA,GAAG,CAAC,kBAAkB,CAAC;QACvB,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1C,kBAAkB,GAAG,uBAAuB,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1J,MAAM;YACH,kBAAkB,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;SACvF;QACD,OAAO,kBAAkB,CAAC;KAC7B,CAAA;;IAED,kBAAA,YAAY,yBAAA,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;QAC5CD,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACvD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC3BA,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACzBA,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAC7BA,GAAK,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;YAC/BA,GAAK,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;;YAE5B,IAAI,UAAU,KAAK,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE;gBACzD,OAAO,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;aAC1C,MAAM,IAAI,UAAU,KAAK,KAAK,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE;gBAC9D,OAAO,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;aAC1C;;;YAGDA,GAAK,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAClC,IAAI,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;gBACpG,OAAO,IAAI,CAAC;aACf;YACDA,GAAK,CAAC,QAAQ,GAAG,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAC/CA,GAAK,CAAC,aAAa,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzI,OAAO,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SAC3H;KACJ,CAAA;;IAED,kBAAA,WAAW,wBAAA,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;QAC/BA,GAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACzBA,GAAK,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAC5BA,GAAK,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACxDA,GAAK,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAChF,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KAClF,CAAA;;IAED,kBAAA,WAAW,wBAAA,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;QAC3CC,GAAG,CAAC,QAAQ,CAAC;QACb,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE;YAC1C,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;SACvE,MAAM;YACH,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACtD;QACD,OAAO,QAAQ,CAAC;KACnB,CAAA,AACJ;;;EA1IqB,KA0IrB,GAAA;;AAED,oBAAoB,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC;AACjF,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEzC,SAAS,WAAW,CAAC,GAAG,EAAE;IACtBA,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACxBA,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;IAClBA,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;;IAElB,KAAKA,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,EAAE;QAC9B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;KACX,CAAC;CACL;;AAED,eAAe,OAAO"}