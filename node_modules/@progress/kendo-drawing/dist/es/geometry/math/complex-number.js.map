{"version":3,"file":"complex-number.js","sources":["complex-number.js"],"sourcesContent":["import { PRECISION } from '../constants';\nimport { Class } from '../../common';\nimport { round } from '../../util';\n\nclass ComplexNumber extends Class {\n\n    constructor(real = 0, img = 0) {\n        super();\n\n        this.real = real;\n        this.img = img;\n    }\n\n    add(cNumber) {\n        return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n    }\n\n    addConstant(value) {\n        return new ComplexNumber(this.real + value, this.img);\n    }\n\n    negate() {\n        return new ComplexNumber(-this.real, -this.img);\n    }\n\n    multiply(cNumber) {\n        return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img,\n            this.real * cNumber.img + this.img * cNumber.real);\n    }\n\n    multiplyConstant(value) {\n        return new ComplexNumber(this.real * value, this.img * value);\n    }\n\n    nthRoot(n) {\n        const rad = Math.atan2(this.img, this.real);\n        const r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n        const nthR = Math.pow(r, 1 / n);\n\n        return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n    }\n\n    equals(cNumber) {\n        return this.real === cNumber.real && this.img === cNumber.img;\n    }\n\n    isReal() {\n        return this.img === 0;\n    }\n}\n\nexport default ComplexNumber;"],"names":["super","const"],"mappings":"AAAA,SAAS,SAAS,QAAQ,cAAc,CAAC;AACzC,SAAS,KAAK,QAAQ,cAAc,CAAC;AACrC,SAAS,KAAK,QAAQ,YAAY,CAAC;;AAEnC,IAAM,aAAa,GAAc;IAAC,AAE9B,sBAAW,CAAC,IAAQ,EAAE,GAAO,EAAE,CAAf;mCAAA,GAAG,CAAC,CAAK;iCAAA,GAAG,CAAC;AAAG;QAC5BA,KAAK,KAAA,CAAC,IAAA,CAAC,CAAC;;QAER,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;;;;wDAAA;;IAED,wBAAA,GAAG,gBAAA,CAAC,OAAO,EAAE;QACT,OAAO,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;KAClH,CAAA;;IAED,wBAAA,WAAW,wBAAA,CAAC,KAAK,EAAE;QACf,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACzD,CAAA;;IAED,wBAAA,MAAM,mBAAA,GAAG;QACL,OAAO,IAAI,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACnD,CAAA;;IAED,wBAAA,QAAQ,qBAAA,CAAC,OAAO,EAAE;QACd,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG;YACtE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;KAC1D,CAAA;;IAED,wBAAA,gBAAgB,6BAAA,CAAC,KAAK,EAAE;QACpB,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;KACjE,CAAA;;IAED,wBAAA,OAAO,oBAAA,CAAC,CAAC,EAAE;QACPC,GAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5CA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACpEA,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEhC,OAAO,IAAI,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KAChF,CAAA;;IAED,wBAAA,MAAM,mBAAA,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC;KACjE,CAAA;;IAED,wBAAA,MAAM,mBAAA,GAAG;QACL,OAAO,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;KACzB,CAAA,AACJ;;;EA7C2B,KA6C3B,GAAA;;AAED,eAAe,aAAa"}