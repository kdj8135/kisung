{"version":3,"file":"circle.js","sources":["circle.js"],"sourcesContent":["import defineAccessors from '../accessors/define-accessors';\nimport ObserversMixin from '../mixins/observers-mixin';\nimport Point from './point';\nimport Rect from './rect';\nimport ellipseExtremeAngles from './math/ellipse-extreme-angles';\nimport { Class } from '../common';\nimport { rad } from '../util';\n\nconst PI_DIV_2 = Math.PI / 2;\n\nclass Circle extends Class {\n\n    constructor(center = new Point(), radius = 0) {\n        super();\n\n        this.setCenter(center);\n        this.setRadius(radius);\n    }\n\n    setCenter(value) {\n        this._observerField(\"center\", Point.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getCenter() {\n        return this.center;\n    }\n\n    equals(other) {\n        return other &&\n               other.center.equals(this.center) &&\n               other.radius === this.radius;\n    }\n\n    clone() {\n        return new Circle(this.center.clone(), this.radius);\n    }\n\n    pointAt(angle) {\n        return this._pointAt(rad(angle));\n    }\n\n    bbox(matrix) {\n        const extremeAngles = ellipseExtremeAngles(this.center, this.radius, this.radius, matrix);\n        let minPoint = Point.maxPoint();\n        let maxPoint = Point.minPoint();\n\n        for (let i = 0; i < 4; i++) {\n            let currentPointX = this._pointAt(extremeAngles.x + i * PI_DIV_2).transformCopy(matrix);\n            let currentPointY = this._pointAt(extremeAngles.y + i * PI_DIV_2).transformCopy(matrix);\n            let currentPoint = new Point(currentPointX.x, currentPointY.y);\n\n            minPoint = Point.min(minPoint, currentPoint);\n            maxPoint = Point.max(maxPoint, currentPoint);\n        }\n\n        return Rect.fromPoints(minPoint, maxPoint);\n    }\n\n    _pointAt(angle) {\n        const { center, radius } = this;\n\n        return new Point(\n            center.x + radius * Math.cos(angle),\n            center.y + radius * Math.sin(angle)\n        );\n    }\n\n    containsPoint(point) {\n        const { center, radius } = this;\n        const inCircle = Math.pow(point.x - center.x, 2) +\n            Math.pow(point.y - center.y, 2) <= Math.pow(radius, 2);\n        return inCircle;\n    }\n\n    _isOnPath(point, width) {\n        const { center, radius } = this;\n        const pointDistance = center.distanceTo(point);\n\n        return radius - width <= pointDistance && pointDistance <= radius + width;\n    }\n}\n\ndefineAccessors(Circle.prototype, [ \"radius\" ]);\nObserversMixin.extend(Circle.prototype);\n\nexport default Circle;"],"names":["const","super","let","this"],"mappings":"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"}