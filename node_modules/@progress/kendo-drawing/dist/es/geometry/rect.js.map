{"version":3,"file":"rect.js","sources":["rect.js"],"sourcesContent":["import ObserversMixin from '../mixins/observers-mixin';\nimport { Class } from '../common';\nimport Point from './point';\nimport Size from './size';\n\nclass Rect extends Class {\n    constructor(origin = new Point(), size = new Size()) {\n        super();\n\n        this.setOrigin(origin);\n        this.setSize(size);\n    }\n\n    clone() {\n        return new Rect(\n            this.origin.clone(),\n            this.size.clone()\n        );\n    }\n\n    equals(other) {\n        return other &&\n               other.origin.equals(this.origin) &&\n               other.size.equals(this.size);\n    }\n\n    setOrigin(value) {\n        this._observerField(\"origin\", Point.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getOrigin() {\n        return this.origin;\n    }\n\n    setSize(value) {\n        this._observerField(\"size\", Size.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getSize() {\n        return this.size;\n    }\n\n    width() {\n        return this.size.width;\n    }\n\n    height() {\n        return this.size.height;\n    }\n\n    topLeft() {\n        return this.origin.clone();\n    }\n\n    bottomRight() {\n        return this.origin.clone().translate(this.width(), this.height());\n    }\n\n    topRight() {\n        return this.origin.clone().translate(this.width(), 0);\n    }\n\n    bottomLeft() {\n        return this.origin.clone().translate(0, this.height());\n    }\n\n    center() {\n        return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n    }\n\n    bbox(matrix) {\n        const tl = this.topLeft().transformCopy(matrix);\n        const tr = this.topRight().transformCopy(matrix);\n        const br = this.bottomRight().transformCopy(matrix);\n        const bl = this.bottomLeft().transformCopy(matrix);\n\n        return Rect.fromPoints(tl, tr, br, bl);\n    }\n\n    transformCopy(m) {\n        return Rect.fromPoints(\n            this.topLeft().transform(m),\n            this.bottomRight().transform(m)\n        );\n    }\n\n    expand(x, y = x) {\n\n        this.size.width += 2 * x;\n        this.size.height += 2 * y;\n\n        this.origin.translate(-x, -y);\n\n        return this;\n    }\n\n    expandCopy(x, y) {\n        return this.clone().expand(x, y);\n    }\n\n    containsPoint(point) {\n        const origin = this.origin;\n        const bottomRight = this.bottomRight();\n        return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n    }\n\n    _isOnPath(point, width) {\n        const rectOuter = this.expandCopy(width, width);\n        const rectInner = this.expandCopy(-width, -width);\n\n        return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n    }\n\n    static fromPoints() {\n        const topLeft = Point.min.apply(null, arguments);\n        const bottomRight = Point.max.apply(null, arguments);\n        const size = new Size(\n            bottomRight.x - topLeft.x,\n            bottomRight.y - topLeft.y\n        );\n\n        return new Rect(topLeft, size);\n    }\n\n    static union(a, b) {\n        return Rect.fromPoints(\n            Point.min(a.topLeft(), b.topLeft()),\n            Point.max(a.bottomRight(), b.bottomRight())\n        );\n    }\n\n    static intersect(a, b) {\n        const rect1 = {\n            left: a.topLeft().x,\n            top: a.topLeft().y,\n            right: a.bottomRight().x,\n            bottom: a.bottomRight().y\n        };\n\n        const rect2 = {\n            left: b.topLeft().x,\n            top: b.topLeft().y,\n            right: b.bottomRight().x,\n            bottom: b.bottomRight().y\n        };\n\n        if (rect1.left <= rect2.right &&\n            rect2.left <= rect1.right &&\n            rect1.top <= rect2.bottom &&\n            rect2.top <= rect1.bottom) {\n            return Rect.fromPoints(\n                new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),\n                new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))\n            );\n        }\n    }\n}\n\nObserversMixin.extend(Rect.prototype);\n\nexport default Rect;"],"names":["super","const"],"mappings":"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"}