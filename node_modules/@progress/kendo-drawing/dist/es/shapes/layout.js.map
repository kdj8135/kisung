{"version":3,"file":"layout.js","sources":["layout.js"],"sourcesContent":["import Group from './group';\nimport Size from '../geometry/size';\nimport Rect from '../geometry/rect';\nimport Point from '../geometry/point';\nimport createTransform from '../geometry/transform';\nimport translateToPoint from '../alignment/translate-to-point';\nimport alignStart from '../alignment/align-start';\nimport alignStartReverse from '../alignment/align-start-reverse';\n\nconst DEFAULT_OPTIONS = {\n    alignContent: \"start\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    spacing: 0,\n    orientation: \"horizontal\",\n    lineSpacing: 0,\n    wrap: true,\n    revers: false\n};\n\nconst forEach = (elements, callback) => {\n    elements.forEach(callback);\n};\n\nconst forEachReverse = (elements, callback) => {\n    const length = elements.length;\n\n    for (let idx = length - 1; idx >= 0; idx--) {\n        callback(elements[idx], idx);\n    }\n};\n\nclass Layout extends Group {\n\n    constructor(rect, options) {\n        super(Object.assign({}, DEFAULT_OPTIONS, options));\n        this._rect = rect;\n        this._fieldMap = {};\n    }\n\n    rect(value) {\n        if (value) {\n            this._rect = value;\n            return this;\n        }\n\n        return this._rect;\n    }\n\n    _initMap() {\n        const options = this.options;\n        const fieldMap = this._fieldMap;\n        if (options.orientation === \"horizontal\") {\n            fieldMap.sizeField = \"width\";\n            fieldMap.groupsSizeField = \"height\";\n            fieldMap.groupAxis = \"x\";\n            fieldMap.groupsAxis = \"y\";\n        } else {\n            fieldMap.sizeField = \"height\";\n            fieldMap.groupsSizeField = \"width\";\n            fieldMap.groupAxis = \"y\";\n            fieldMap.groupsAxis = \"x\";\n        }\n\n        if (options.reverse) {\n            this.forEach = forEachReverse;\n            this.justifyAlign = alignStartReverse;\n        } else {\n            this.forEach = forEach;\n            this.justifyAlign = alignStart;\n        }\n    }\n\n    reflow() {\n        if (!this._rect || this.children.length === 0) {\n            return;\n        }\n        this._initMap();\n\n        if (this.options.transform) {\n            this.transform(null);\n        }\n\n        const options = this.options;\n        const rect = this._rect;\n        const { groups, groupsSize } = this._initGroups();\n        const { sizeField, groupsSizeField, groupAxis, groupsAxis } = this._fieldMap;\n        const groupOrigin = new Point();\n        const elementOrigin = new Point();\n        const size = new Size();\n        let groupStart = alignStart(groupsSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n        let elementStart, group, groupBox;\n\n        const arrangeElements = (bbox, idx) => {\n            const element = group.elements[idx];\n\n            elementOrigin[groupAxis] = elementStart;\n            elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options.alignItems, groupsAxis, groupsSizeField);\n            translateToPoint(elementOrigin, bbox, element);\n            elementStart += bbox.size[sizeField] + options.spacing;\n        };\n\n        for (let groupIdx = 0; groupIdx < groups.length; groupIdx++) {\n            group = groups[groupIdx];\n            groupOrigin[groupAxis] = elementStart = this.justifyAlign(group.size, rect, options.justifyContent, groupAxis, sizeField);\n            groupOrigin[groupsAxis] = groupStart;\n            size[sizeField] = group.size;\n            size[groupsSizeField] = group.lineSize;\n            groupBox = new Rect(groupOrigin, size);\n            this.forEach(group.bboxes, arrangeElements);\n\n            groupStart += group.lineSize + options.lineSpacing;\n        }\n\n        if (!options.wrap && group.size > rect.size[sizeField]) {\n            const scale = rect.size[sizeField] / groupBox.size[sizeField];\n            const scaledStart = groupBox.topLeft().scale(scale, scale);\n            const scaledSize = groupBox.size[groupsSizeField] * scale;\n            const newStart = alignStart(scaledSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n            const transform = createTransform();\n            if (groupAxis === \"x\") {\n                transform.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);\n            } else {\n                transform.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);\n            }\n            transform.scale(scale, scale);\n\n            this.transform(transform);\n        }\n    }\n\n    _initGroups() {\n        const { options, children } = this;\n        const { lineSpacing, wrap, spacing } = options;\n        const sizeField = this._fieldMap.sizeField;\n        let group = this._newGroup();\n        const groups = [];\n        const addGroup = function() {\n            groups.push(group);\n            groupsSize += group.lineSize + lineSpacing;\n        };\n        let groupsSize = -lineSpacing;\n\n        for (let idx = 0; idx < children.length; idx++) {\n            let element = children[idx];\n            let bbox = children[idx].clippedBBox();\n            if (element.visible() && bbox) {\n                if (wrap && group.size + bbox.size[sizeField] + spacing > this._rect.size[sizeField]) {\n                    if (group.bboxes.length === 0) {\n                        this._addToGroup(group, bbox, element);\n                        addGroup();\n                        group = this._newGroup();\n                    } else {\n                        addGroup();\n                        group = this._newGroup();\n                        this._addToGroup(group, bbox, element);\n                    }\n                } else {\n                    this._addToGroup(group, bbox, element);\n                }\n            }\n        }\n\n        if (group.bboxes.length) {\n            addGroup();\n        }\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize\n        };\n    }\n\n    _addToGroup(group, bbox, element) {\n        group.size += bbox.size[this._fieldMap.sizeField] + this.options.spacing;\n        group.lineSize = Math.max(bbox.size[this._fieldMap.groupsSizeField], group.lineSize);\n        group.bboxes.push(bbox);\n        group.elements.push(element);\n    }\n\n    _newGroup() {\n        return {\n            lineSize: 0,\n            size: -this.options.spacing,\n            bboxes: [],\n            elements: []\n        };\n    }\n}\n\nexport default Layout;"],"names":["const","let","super","this"],"mappings":"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"}