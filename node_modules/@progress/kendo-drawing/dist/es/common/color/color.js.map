{"version":3,"file":"color.js","sources":["color.js"],"sourcesContent":["import Class from '../class';\nimport namedColors from './named-colors';\nimport { Bytes, RGB, HSV, HSL } from './parse-color';\n\nclass Color extends Class {\n    constructor(value) {\n        super();\n\n        if (arguments.length === 1) {\n            const formats = Color.formats;\n            const resolvedColor = this.resolveColor(value);\n\n            for (let idx = 0; idx < formats.length; idx++) {\n                const formatRegex = formats[idx].re;\n                const processor = formats[idx].process;\n                const parts = formatRegex.exec(resolvedColor);\n\n                if (parts) {\n                    const channels = processor(parts);\n                    this.r = channels[0];\n                    this.g = channels[1];\n                    this.b = channels[2];\n                }\n            }\n        } else {\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n        }\n\n        this.r = this.normalizeByte(this.r);\n        this.g = this.normalizeByte(this.g);\n        this.b = this.normalizeByte(this.b);\n    }\n\n    toHex() {\n        const pad = this.padDigit;\n        const r = this.r.toString(16);\n        const g = this.g.toString(16);\n        const b = this.b.toString(16);\n\n        return \"#\" + pad(r) + pad(g) + pad(b);\n    }\n\n    resolveColor(value) {\n        let color = value || \"black\";\n\n        if (color.charAt(0) === \"#\") {\n            color = color.substr(1, 6);\n        }\n\n        color = color.replace(/ /g, \"\");\n        color = color.toLowerCase();\n        color = Color.namedColors[color] || color;\n\n        return color;\n    }\n\n    normalizeByte(value) {\n        if (value < 0 || isNaN(value)) {\n            return 0;\n        }\n\n        return value > 255 ? 255 : value;\n    }\n\n    padDigit(value) {\n        return (value.length === 1) ? \"0\" + value : value;\n    }\n\n    brightness(value) {\n        const round = Math.round;\n\n        this.r = round(this.normalizeByte(this.r * value));\n        this.g = round(this.normalizeByte(this.g * value));\n        this.b = round(this.normalizeByte(this.b * value));\n\n        return this;\n    }\n\n    percBrightness() {\n        return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n    }\n\n    static fromBytes(r, g, b, a) {\n        return new Bytes(r, g, b, a != null ? a : 1);\n    }\n\n    static fromRGB(r, g, b, a) {\n        return new RGB(r, g, b, a != null ? a : 1);\n    }\n\n    static fromHSV(h, s, v, a) {\n        return new HSV(h, s, v, a != null ? a : 1);\n    }\n\n    static fromHSL(h, s, l, a) {\n        return new HSL(h, s, l, a != null ? a : 1);\n    }\n}\n\nColor.formats = [ {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n        ];\n    }\n}, {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n        ];\n    }\n}, {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1] + parts[1], 16),\n            parseInt(parts[2] + parts[2], 16),\n            parseInt(parts[3] + parts[3], 16)\n        ];\n    }\n} ];\n\nColor.namedColors = namedColors;\n\nexport default Color;"],"names":["super","const","let","this"],"mappings":"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"}