{"version":3,"file":"definition-node.js","sources":["definition-node.js"],"sourcesContent":["import LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport LinearGradientNode from './linear-gradient-node';\nimport RadialGradientNode from './radial-gradient-node';\nimport Node from './node';\nimport ClipNode from './clip-node';\n\nclass DefinitionNode extends Node {\n    constructor() {\n        super();\n        this.definitionMap = {};\n    }\n\n    attachTo(domElement) {\n        this.element = domElement;\n    }\n\n    template() {\n        return `<defs>${ this.renderChildren() }</defs>`;\n    }\n\n    definitionChange(e) {\n        const { definitions, action } = e;\n\n        if (action === \"add\") {\n            this.addDefinitions(definitions);\n        } else if (action === \"remove\") {\n            this.removeDefinitions(definitions);\n        }\n    }\n\n    createDefinition(type, item) {\n        let nodeType;\n        if (type === \"clip\") {\n            nodeType = ClipNode;\n        } else if (type === \"fill\") {\n            if (item instanceof LinearGradient) {\n                nodeType = LinearGradientNode;\n            } else if (item instanceof RadialGradient) {\n                nodeType = RadialGradientNode;\n            }\n        }\n        return new nodeType(item);\n    }\n\n    addDefinitions(definitions) {\n        for (let field in definitions) {\n            this.addDefinition(field, definitions[field]);\n        }\n    }\n\n    addDefinition(type, srcElement) {\n        const { element, definitionMap } = this;\n        const id = srcElement.id;\n        const mapItem = definitionMap[id];\n        if (!mapItem) {\n            const node = this.createDefinition(type, srcElement);\n            definitionMap[id] = {\n                element: node,\n                count: 1\n            };\n            this.append(node);\n            if (element) {\n                node.attachTo(this.element);\n            }\n        } else {\n            mapItem.count++;\n        }\n    }\n\n    removeDefinitions(definitions) {\n        for (let field in definitions) {\n            this.removeDefinition(definitions[field]);\n        }\n    }\n\n    removeDefinition(srcElement) {\n        const definitionMap = this.definitionMap;\n        const id = srcElement.id;\n        const mapItem = definitionMap[id];\n\n        if (mapItem) {\n            mapItem.count--;\n            if (mapItem.count === 0) {\n                this.remove(this.childNodes.indexOf(mapItem.element), 1);\n                delete definitionMap[id];\n            }\n        }\n    }\n}\n\nexport default DefinitionNode;"],"names":["super","const","let","this"],"mappings":"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"}