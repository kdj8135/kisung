"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * Defines an event whose default action can be prevented
 * by calling the `preventDefault` method.
 *
 * @hidden
 */
var PreventableEvent = /** @class */ (function () {
    function PreventableEvent() {
        this.prevented = false;
    }
    /**
     * Prevents the default action for a specified event.
     * In this way, the source component suppresses
     * the built-in behavior that follows the event.
     */
    PreventableEvent.prototype.preventDefault = function () {
        this.prevented = true;
    };
    /**
     * If the event was prevented
     * by any of its subscribers, returns `true`.
     *
     * @returns `true` if the default action was prevented. Otherwise, returns `false`.
     */
    PreventableEvent.prototype.isDefaultPrevented = function () {
        return this.prevented;
    };
    return PreventableEvent;
}());
exports.PreventableEvent = PreventableEvent;
/**
 * The arguments for the `data`, `add`, or `remove` events.
 */
var DataEvent = /** @class */ (function (_super) {
    tslib_1.__extends(DataEvent, _super);
    /**
     * Constructs the event arguments for the `data`, `add`, or `remove` events.
     * @param index - The index of the data item.
     * @param dataItem - The data item that will be added or removed.
     */
    function DataEvent(index, dataItem) {
        var _this = _super.call(this) || this;
        _this.index = index;
        _this.dataItem = dataItem;
        return _this;
    }
    return DataEvent;
}(PreventableEvent));
exports.DataEvent = DataEvent;
