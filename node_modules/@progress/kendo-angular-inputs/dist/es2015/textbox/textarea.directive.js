import { Directive, ElementRef, EventEmitter, HostBinding, Output, Renderer2, Optional, Inject } from '@angular/core';
import { RTL } from '@progress/kendo-angular-l10n';
/**
 * Represents the Kendo UI TextArea directive for the Inputs components for Angular.
 * Used to add floating label to any `textarea` element.
 *
 * @example
 * ```ts-no-run
 * <textarea kendoTextArea></textarea>
 * ```
 */
export class TextAreaDirective {
    constructor(renderer, textAreaElement, rtl) {
        this.renderer = renderer;
        this.textAreaElement = textAreaElement;
        /**
         * Fires each time the user focuses the `textarea` element.
         */
        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename
        /**
         * Fires each time the `textarea` element gets blurred.
         */
        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename
        this.listeners = [];
        this.direction = rtl ? 'rtl' : 'ltr';
    }
    get elementClass() {
        return true;
    }
    /**
     * Gets the value of the `textarea` element.
     */
    get value() {
        return this.textAreaElement.nativeElement.value;
    }
    get id() {
        return this.textAreaElement.nativeElement.id;
    }
    set id(id) {
        this.renderer.setAttribute(this.textAreaElement.nativeElement, 'id', id);
    }
    ngAfterViewInit() {
        const textarea = this.textAreaElement.nativeElement;
        this.listeners = [
            this.renderer.listen(textarea, 'focus', () => this.onFocus.emit()),
            this.renderer.listen(textarea, 'blur', () => this.onBlur.emit())
        ];
    }
    ngOnDestroy() {
        this.listeners.forEach(listener => listener());
    }
}
TextAreaDirective.decorators = [
    { type: Directive, args: [{
                selector: 'textarea[kendoTextArea]'
            },] },
];
/** @nocollapse */
TextAreaDirective.ctorParameters = () => [
    { type: Renderer2, },
    { type: ElementRef, },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [RTL,] },] },
];
TextAreaDirective.propDecorators = {
    'elementClass': [{ type: HostBinding, args: ['class.k-textarea',] },],
    'direction': [{ type: HostBinding, args: ['attr.dir',] },],
    'onFocus': [{ type: Output, args: ['focus',] },],
    'onBlur': [{ type: Output, args: ['blur',] },],
};
