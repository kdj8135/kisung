{"version":3,"file":"excel-exporter.js","sources":["excel-exporter.js"],"sourcesContent":["import TemplateService from './services/template-service';\nimport getter from './utils/getter';\nimport map from './utils/map';\n\nfunction defaultGroupHeaderTemplate(data) {\n    return `${ data.title }: ${ data.value }`;\n}\n\nfunction createArray(length, callback) {\n    const result = [];\n\n    for (let idx = 0; idx < length; idx++) {\n        result.push(callback(idx));\n    }\n\n    return result;\n}\n\nclass ExcelExporter {\n    constructor(options) {\n        options.columns = this._trimColumns(options.columns || []);\n\n        this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);\n\n        this.columns = this.allColumns.filter(function(column) { return !column.hidden; });\n\n        this.options = options;\n        this.data = options.data || [];\n        this.aggregates = options.aggregates || {};\n        this.groups = [].concat(options.groups || []);\n        this.hierarchy = options.hierarchy;\n    }\n\n    workbook() {\n        const workbook = {\n            sheets: [ {\n                columns: this._columns(),\n                rows: this._rows(),\n                freezePane: this._freezePane(),\n                filter: this._filter()\n            } ]\n        };\n\n        return workbook;\n    }\n\n    _trimColumns(columns) {\n        return columns.filter((column) => {\n            let result = Boolean(column.field);\n\n            if (!result && column.columns) {\n                result = this._trimColumns(column.columns).length > 0;\n            }\n\n            return result;\n        });\n    }\n\n    _leafColumns(columns) {\n        let result = [];\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            if (!columns[idx].columns) {\n                result.push(columns[idx]);\n            } else {\n                result = result.concat(this._leafColumns(columns[idx].columns));\n            }\n        }\n\n        return result;\n    }\n\n    _prepareColumn(column) {\n        if (!column.field) {\n            return null;\n        }\n\n        let value = function(dataItem) {\n            return getter(column.field)(dataItem);\n        };\n\n        let values = null;\n\n        if (column.values) {\n            values = {};\n\n            column.values.forEach(function(item) {\n                values[item.value] = item.text;\n            });\n\n            value = function(dataItem) {\n                return values[getter(column.field)(dataItem)];\n            };\n        }\n\n        return Object.assign({}, column, {\n            value: value,\n            values: values,\n            groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,\n            groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,\n            footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null\n        });\n    }\n\n    _filter() {\n        if (!this.options.filterable) {\n            return null;\n        }\n\n        const depth = this._depth();\n\n        return {\n            from: depth,\n            to: depth + this.columns.length - 1\n        };\n    }\n\n    _createPaddingCells(length) {\n        return createArray(length, () => Object.assign({\n            background: \"#dfdfdf\",\n            color: \"#333\"\n        }, this.options.paddingCellOptions));\n    }\n\n    _dataRow(dataItem, itemLevel, depth) {\n        let level = itemLevel;\n        if (this.hierarchy) {\n            level = this.hierarchy.itemLevel(dataItem) + 1;\n        }\n\n        const cells = this._createPaddingCells(level);\n\n        // grouped\n        if (depth && dataItem.items) {\n            const column = this.allColumns.filter(function(column) {\n                return column.field === dataItem.field;\n            })[0];\n\n            const title = column && column.title ? column.title : dataItem.field;\n            const template = column ? column.groupHeaderTemplate : null;\n            const group = Object.assign({\n                title: title,\n                field: dataItem.field,\n                value: column && column.values ? column.values[dataItem.value] : dataItem.value,\n                aggregates: dataItem.aggregates,\n                items: dataItem.items\n            }, dataItem.aggregates[dataItem.field]);\n\n            let value = `${ title }: ${ dataItem.value }`;\n\n            if (template) {\n                value = template(group);\n            }\n\n            cells.push(Object.assign({\n                value: value,\n                background: \"#dfdfdf\",\n                color: \"#333\",\n                colSpan: this.columns.length + depth - level\n            }, (column || {}).groupHeaderCellOptions));\n\n            const rows = this._dataRows(dataItem.items, level + 1);\n\n            rows.unshift({\n                type: \"group-header\",\n                cells: cells\n            });\n\n            return rows.concat(this._footer(dataItem));\n        }\n\n        const dataCells = [];\n\n        for (let cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {\n            dataCells[cellIdx] = this._cell(dataItem, this.columns[cellIdx]);\n        }\n\n        if (this.hierarchy) {\n            dataCells[0].colSpan = depth - level + 1;\n        }\n\n        return [ {\n            type: \"data\",\n            cells: cells.concat(dataCells)\n        } ];\n    }\n\n    _dataRows(dataItems, level) {\n        const depth = this._depth();\n        const rows = [];\n\n        for (let idx = 0; idx < dataItems.length; idx++) {\n            rows.push.apply(rows, this._dataRow(dataItems[idx], level, depth));\n        }\n\n        return rows;\n    }\n\n    _footer(dataItem) {\n        const rows = [];\n        let footer = false;\n\n        const cells = this.columns.map((column) => {\n            if (column.groupFooterTemplate) {\n                const templateData = Object.assign({}, this.aggregates, dataItem.aggregates, dataItem.aggregates[column.field], {\n                    group: {\n                        items: dataItem.items,\n                        field: dataItem.field,\n                        value: dataItem.value\n                    }\n                });\n\n                // https://github.com/telerik/kendo-ui-core/issues/3024\n                // https://github.com/telerik/kendo-ui-core/issues/3095\n                templateData[dataItem.field] = templateData;\n\n                footer = true;\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\",\n                    value: column.groupFooterTemplate(templateData)\n                }, column.groupFooterCellOptions);\n            }\n\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\"\n            }, column.groupFooterCellOptions);\n        });\n\n        if (footer) {\n            rows.push({\n                type: \"group-footer\",\n                cells: this._createPaddingCells(this.groups.length).concat(cells)\n            });\n        }\n\n        return rows;\n    }\n\n    _isColumnVisible(column) {\n        return this._visibleColumns([ column ]).length > 0 && (column.field || column.columns);\n    }\n\n    _visibleColumns(columns) {\n        return columns.filter((column) => {\n            let result = !column.hidden;\n            if (result && column.columns) {\n                result = this._visibleColumns(column.columns).length > 0;\n            }\n            return result;\n        });\n    }\n\n    _headerRow(row, groups) {\n        const headers = row.cells.map(function(cell) {\n            return Object.assign(cell, {\n                colSpan: cell.colSpan > 1 ? cell.colSpan : 1,\n                rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1\n            });\n        });\n\n        if (this.hierarchy) {\n            headers[0].colSpan = this._depth() + 1;\n        }\n\n        return {\n            type: \"header\",\n            cells: createArray(groups.length, () => Object.assign({\n                background: \"#7a7a7a\",\n                color: \"#fff\"\n            }, this.options.headerPaddingCellOptions)).concat(headers)\n        };\n    }\n\n    _prependHeaderRows(rows) {\n        const groups = this.groups;\n\n        const headerRows = [ { rowSpan: 1, cells: [], index: 0 } ];\n\n        this._prepareHeaderRows(headerRows, this.options.columns);\n\n        for (let idx = headerRows.length - 1; idx >= 0; idx--) {\n            rows.unshift(this._headerRow(headerRows[idx], groups));\n        }\n    }\n\n    _prepareHeaderRows(rows, columns, parentCell, parentRow) {\n        const row = parentRow || rows[rows.length - 1];\n        let childRow = rows[row.index + 1];\n        let totalColSpan = 0;\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            const column = columns[idx];\n            if (this._isColumnVisible(column)) {\n\n                const cell = Object.assign({\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: column.title || column.field,\n                    colSpan: 0\n                }, column.headerCellOptions);\n                row.cells.push(cell);\n\n                if (column.columns && column.columns.length) {\n                    if (!childRow) {\n                        childRow = { rowSpan: 0, cells: [], index: rows.length };\n                        rows.push(childRow);\n                    }\n                    cell.colSpan = this._trimColumns(this._visibleColumns(column.columns)).length;\n                    this._prepareHeaderRows(rows, column.columns, cell, childRow);\n                    totalColSpan += cell.colSpan - 1;\n                    row.rowSpan = rows.length - row.index;\n                }\n            }\n        }\n\n        if (parentCell) {\n            parentCell.colSpan += totalColSpan;\n        }\n    }\n\n    _rows() {\n        const rows = this._dataRows(this.data, 0);\n\n        if (this.columns.length) {\n            this._prependHeaderRows(rows);\n            let footer = false;\n\n            const cells = this.columns.map((column) => {\n                if (column.footerTemplate) {\n                    footer = true;\n\n                    return Object.assign({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: column.footerTemplate(Object.assign({}, this.aggregates, this.aggregates[column.field]))\n                    }, column.footerCellOptions);\n                }\n\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\"\n                }, column.footerCellOptions);\n            });\n\n            if (footer) {\n                rows.push({\n                    type: \"footer\",\n                    cells: this._createPaddingCells(this.groups.length).concat(cells)\n                });\n            }\n        }\n\n        return rows;\n    }\n\n    _headerDepth(columns) {\n        const result = 1;\n        let max = 0;\n\n        for (let idx = 0; idx < columns.length; idx++) {\n            if (columns[idx].columns) {\n                const temp = this._headerDepth(columns[idx].columns);\n                if (temp > max) {\n                    max = temp;\n                }\n            }\n        }\n        return result + max;\n    }\n\n    _freezePane() {\n        const columns = this._visibleColumns(this.options.columns || []);\n\n        const colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function(column) {\n            return column.locked;\n        })))).length;\n\n        return {\n            rowSplit: this._headerDepth(columns),\n            colSplit: colSplit ? colSplit + this.groups.length : 0\n        };\n    }\n\n    _cell(dataItem, column) {\n        return Object.assign({\n            value: column.value(dataItem)\n        }, column.cellOptions);\n    }\n\n    _depth() {\n        let depth = 0;\n\n        if (this.hierarchy) {\n            depth = this.hierarchy.depth;\n        } else {\n            depth = this.groups.length;\n        }\n\n        return depth;\n    }\n\n    _columns() {\n        const depth = this._depth();\n        const columns = createArray(depth, () => ({ width: 20 }));\n\n        return columns.concat(this.columns.map(function(column) {\n            return {\n                width: parseInt(column.width, 10),\n                autoWidth: column.width ? false : true\n            };\n        }));\n    }\n}\n\nexport default ExcelExporter;\n"],"names":["const","let","this"],"mappings":"AAAA,OAAO,eAAe,MAAM,6BAA6B,CAAC;AAC1D,OAAO,MAAM,MAAM,gBAAgB,CAAC;AACpC,OAAO,GAAG,MAAM,aAAa,CAAC;;AAE9B,SAAS,0BAA0B,CAAC,IAAI,EAAE;IACtC,OAAO,CAAA,CAAI,IAAI,CAAC,KAAK,CAAA,OAAI,IAAG,IAAI,CAAC,KAAK,CAAA,CAAG,CAAC;CAC7C;;AAED,SAAS,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;IACnCA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC;;IAElB,KAAKC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;QACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9B;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,IAAM,aAAa,GAAC,AACpB,AAAI,sBAAW,CAAC,OAAO,EAAE;IACrB,AAAI,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;;IAE/D,AAAI,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;;IAEzF,AAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,MAAM,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;;IAEvF,AAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,AAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;IACnC,AAAI,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;IAC/C,AAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;IAClD,AAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAC3C,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,QAAQ,qBAAA,GAAG;IACX,AAAID,GAAK,CAAC,QAAQ,GAAG;QACjB,AAAI,MAAM,EAAE,EAAE;YACV,AAAI,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE;YAC5B,AAAI,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE;YACtB,AAAI,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE;YAClC,AAAI,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE;QAC9B,AAAI,CAAC,EAAE;IACX,AAAI,CAAC,CAAC;;IAEN,AAAI,OAAO,QAAQ,CAAC;AACxB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,YAAY,yBAAA,CAAC,OAAO,EAAE,CAAC;;AAAA;IACvB,AAAI,OAAO,OAAO,CAAC,MAAM,CAAC,SAAA,CAAC,MAAM,EAAE,AAAG;QAClC,AAAIC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;QAEvC,AAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;YAC/B,AAAI,MAAM,GAAGC,MAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9D,AAAI,CAAC;;QAEL,AAAI,OAAO,MAAM,CAAC;IACtB,AAAI,CAAC,CAAC,CAAC;AACX,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,YAAY,yBAAA,CAAC,OAAO,EAAE,CAAC;;AAAA;IACvB,AAAID,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;;IAEpB,AAAI,KAAKA,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC/C,AAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE;YAC3B,AAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,AAAI,CAAC,MAAM;YACP,AAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAACC,MAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,AAAI,CAAC;IACT,AAAI,CAAC;;IAEL,AAAI,OAAO,MAAM,CAAC;AACtB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,cAAc,2BAAA,CAAC,MAAM,EAAE;IACvB,AAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACnB,AAAI,OAAO,IAAI,CAAC;IACpB,AAAI,CAAC;;IAEL,AAAID,GAAG,CAAC,KAAK,GAAG,SAAS,QAAQ,EAAE;QAC/B,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC9C,AAAI,CAAC,CAAC;;IAEN,AAAIA,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;;IAEtB,AAAI,IAAI,MAAM,CAAC,MAAM,EAAE;QACnB,AAAI,MAAM,GAAG,EAAE,CAAC;;QAEhB,AAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;YACrC,AAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACvC,AAAI,CAAC,CAAC,CAAC;;QAEP,AAAI,KAAK,GAAG,SAAS,QAAQ,EAAE;YAC3B,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,AAAI,CAAC,CAAC;IACV,AAAI,CAAC;;IAEL,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE;QACjC,AAAI,KAAK,EAAE,KAAK;QAChB,AAAI,MAAM,EAAE,MAAM;QAClB,AAAI,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,0BAA0B;QACtI,AAAI,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,IAAI;QAChH,AAAI,cAAc,EAAE,MAAM,CAAC,cAAc,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI;IACrG,AAAI,CAAC,CAAC,CAAC;AACX,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,OAAO,oBAAA,GAAG;IACV,AAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;QAC9B,AAAI,OAAO,IAAI,CAAC;IACpB,AAAI,CAAC;;IAEL,AAAID,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;IAEhC,AAAI,OAAO;QACP,AAAI,IAAI,EAAE,KAAK;QACf,AAAI,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;IAC3C,AAAI,CAAC,CAAC;AACV,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,mBAAmB,gCAAA,CAAC,MAAM,EAAE,CAAC;;AAAA;IAC7B,AAAI,OAAO,WAAW,CAAC,MAAM,EAAE,SAAA,GAAG,AAAG,SAAA,MAAM,CAAC,MAAM,CAAC;QAC/C,AAAI,UAAU,EAAE,SAAS;QACzB,AAAI,KAAK,EAAE,MAAM;IACrB,AAAI,CAAC,EAAEE,MAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAA,CAAC,CAAC;AAC7C,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,QAAQ,qBAAA,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;;AAAA;IACtC,AAAID,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;IAC1B,AAAI,IAAI,IAAI,CAAC,SAAS,EAAE;QACpB,AAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACvD,AAAI,CAAC;;IAEL,AAAID,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;;IAElD,AAAI;IACJ,AAAI,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE;QAC7B,AAAIA,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,MAAM,EAAE;YACvD,AAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC;QAC/C,AAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEV,AAAIA,GAAK,CAAC,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QACzE,AAAIA,GAAK,CAAC,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChE,AAAIA,GAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,AAAI,KAAK,EAAE,KAAK;YAChB,AAAI,KAAK,EAAE,QAAQ,CAAC,KAAK;YACzB,AAAI,KAAK,EAAE,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK;YACnF,AAAI,UAAU,EAAE,QAAQ,CAAC,UAAU;YACnC,AAAI,KAAK,EAAE,QAAQ,CAAC,KAAK;QAC7B,AAAI,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;QAE5C,AAAIC,GAAG,CAAC,KAAK,GAAG,AAAI,KAAK,OAAI,IAAG,QAAQ,CAAC,KAAK,CAAA,AAAG,CAAC;;QAElD,AAAI,IAAI,QAAQ,EAAE;YACd,AAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChC,AAAI,CAAC;;QAEL,AAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACzB,AAAI,KAAK,EAAE,KAAK;YAChB,AAAI,UAAU,EAAE,SAAS;YACzB,AAAI,KAAK,EAAE,MAAM;YACjB,AAAI,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK;QACpD,AAAI,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;;QAE/C,AAAID,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;;QAE3D,AAAI,IAAI,CAAC,OAAO,CAAC;YACb,AAAI,IAAI,EAAE,cAAc;YACxB,AAAI,KAAK,EAAE,KAAK;QACpB,AAAI,CAAC,CAAC,CAAC;;QAEP,AAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnD,AAAI,CAAC;;IAEL,AAAIA,GAAK,CAAC,SAAS,GAAG,EAAE,CAAC;;IAEzB,AAAI,KAAKC,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;QAChE,AAAI,SAAS,CAAC,OAAO,CAAC,GAAGC,MAAI,CAAC,KAAK,CAAC,QAAQ,EAAEA,MAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,AAAI,CAAC;;IAEL,AAAI,IAAI,IAAI,CAAC,SAAS,EAAE;QACpB,AAAI,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IACjD,AAAI,CAAC;;IAEL,AAAI,OAAO,EAAE;QACT,AAAI,IAAI,EAAE,MAAM;QAChB,AAAI,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;IACtC,AAAI,CAAC,EAAE,CAAC;AACZ,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,SAAS,sBAAA,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC;;AAAA;IAC7B,AAAIF,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAChC,AAAIA,GAAK,CAAC,IAAI,GAAG,EAAE,CAAC;;IAEpB,AAAI,KAAKC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QACjD,AAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAEC,MAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3E,AAAI,CAAC;;IAEL,AAAI,OAAO,IAAI,CAAC;AACpB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,OAAO,oBAAA,CAAC,QAAQ,EAAE,CAAC;;AAAA;IACnB,AAAIF,GAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IACpB,AAAIC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;;IAEvB,AAAID,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAA,CAAC,MAAM,EAAE,AAAG;QAC3C,AAAI,IAAI,MAAM,CAAC,mBAAmB,EAAE;YAChC,AAAIA,GAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAEE,MAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;gBAChH,AAAI,KAAK,EAAE;oBACP,AAAI,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACzB,AAAI,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACzB,AAAI,KAAK,EAAE,QAAQ,CAAC,KAAK;gBAC7B,AAAI,CAAC;YACT,AAAI,CAAC,CAAC,CAAC;;YAEP,AAAI;YACJ,AAAI;YACJ,AAAI,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;;YAEhD,AAAI,MAAM,GAAG,IAAI,CAAC;YAClB,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;gBACrB,AAAI,UAAU,EAAE,SAAS;gBACzB,AAAI,KAAK,EAAE,MAAM;gBACjB,AAAI,KAAK,EAAE,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACvD,AAAI,CAAC,EAAE,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAC1C,AAAI,CAAC;;QAEL,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;YACrB,AAAI,UAAU,EAAE,SAAS;YACzB,AAAI,KAAK,EAAE,MAAM;QACrB,AAAI,CAAC,EAAE,MAAM,CAAC,sBAAsB,CAAC,CAAC;IAC1C,AAAI,CAAC,CAAC,CAAC;;IAEP,AAAI,IAAI,MAAM,EAAE;QACZ,AAAI,IAAI,CAAC,IAAI,CAAC;YACV,AAAI,IAAI,EAAE,cAAc;YACxB,AAAI,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACzE,AAAI,CAAC,CAAC,CAAC;IACX,AAAI,CAAC;;IAEL,AAAI,OAAO,IAAI,CAAC;AACpB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,gBAAgB,6BAAA,CAAC,MAAM,EAAE;IACzB,AAAI,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/F,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,eAAe,4BAAA,CAAC,OAAO,EAAE,CAAC;;AAAA;IAC1B,AAAI,OAAO,OAAO,CAAC,MAAM,CAAC,SAAA,CAAC,MAAM,EAAE,AAAG;QAClC,AAAID,GAAG,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;QAChC,AAAI,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;YAC9B,AAAI,MAAM,GAAGC,MAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QACjE,AAAI,CAAC;QACL,AAAI,OAAO,MAAM,CAAC;IACtB,AAAI,CAAC,CAAC,CAAC;AACX,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,UAAU,uBAAA,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC;;AAAA;IACzB,AAAIF,GAAK,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;QAC7C,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;YAC3B,AAAI,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC;YAChD,AAAI,OAAO,EAAE,GAAG,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC;QACnE,AAAI,CAAC,CAAC,CAAC;IACX,AAAI,CAAC,CAAC,CAAC;;IAEP,AAAI,IAAI,IAAI,CAAC,SAAS,EAAE;QACpB,AAAI,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/C,AAAI,CAAC;;IAEL,AAAI,OAAO;QACP,AAAI,IAAI,EAAE,QAAQ;QAClB,AAAI,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,SAAA,GAAG,AAAG,SAAA,MAAM,CAAC,MAAM,CAAC;YACtD,AAAI,UAAU,EAAE,SAAS;YACzB,AAAI,KAAK,EAAE,MAAM;QACrB,AAAI,CAAC,EAAEE,MAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,GAAA,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;IAClE,AAAI,CAAC,CAAC;AACV,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,kBAAkB,+BAAA,CAAC,IAAI,EAAE,CAAC;;AAAA;IAC1B,AAAIF,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;IAE/B,AAAIA,GAAK,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;;IAE/D,AAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;;IAE9D,AAAI,KAAKC,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;QACvD,AAAI,IAAI,CAAC,OAAO,CAACC,MAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/D,AAAI,CAAC;AACT,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,kBAAkB,+BAAA,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;;AAAA;IAC1D,AAAIF,GAAK,CAAC,GAAG,GAAG,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACnD,AAAIC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACvC,AAAIA,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;;IAEzB,AAAI,KAAKA,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC/C,AAAID,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,AAAI,IAAIE,MAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;;YAEnC,AAAIF,GAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC3B,AAAI,UAAU,EAAE,SAAS;gBACzB,AAAI,KAAK,EAAE,MAAM;gBACjB,AAAI,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK;gBACvC,AAAI,OAAO,EAAE,CAAC;YAClB,AAAI,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACjC,AAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;YAEzB,AAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC7C,AAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,AAAI,QAAQ,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;oBAC7D,AAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5B,AAAI,CAAC;gBACL,AAAI,IAAI,CAAC,OAAO,GAAGE,MAAI,CAAC,YAAY,CAACA,MAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;gBAClF,AAAIA,MAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAClE,AAAI,YAAY,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACrC,AAAI,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;YAC9C,AAAI,CAAC;QACT,AAAI,CAAC;IACT,AAAI,CAAC;;IAEL,AAAI,IAAI,UAAU,EAAE;QAChB,AAAI,UAAU,CAAC,OAAO,IAAI,YAAY,CAAC;IAC3C,AAAI,CAAC;AACT,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,KAAK,kBAAA,GAAG,CAAC;;AAAA;IACT,AAAIF,GAAK,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;IAE9C,AAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACzB,AAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAClC,AAAIC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;;QAEvB,AAAID,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAA,CAAC,MAAM,EAAE,AAAG;YAC3C,AAAI,IAAI,MAAM,CAAC,cAAc,EAAE;gBAC3B,AAAI,MAAM,GAAG,IAAI,CAAC;;gBAElB,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;oBACrB,AAAI,UAAU,EAAE,SAAS;oBACzB,AAAI,KAAK,EAAE,MAAM;oBACjB,AAAI,KAAK,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAEE,MAAI,CAAC,UAAU,EAAEA,MAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvG,AAAI,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACrC,AAAI,CAAC;;YAEL,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;gBACrB,AAAI,UAAU,EAAE,SAAS;gBACzB,AAAI,KAAK,EAAE,MAAM;YACrB,AAAI,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACrC,AAAI,CAAC,CAAC,CAAC;;QAEP,AAAI,IAAI,MAAM,EAAE;YACZ,AAAI,IAAI,CAAC,IAAI,CAAC;gBACV,AAAI,IAAI,EAAE,QAAQ;gBAClB,AAAI,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YACzE,AAAI,CAAC,CAAC,CAAC;QACX,AAAI,CAAC;IACT,AAAI,CAAC;;IAEL,AAAI,OAAO,IAAI,CAAC;AACpB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,YAAY,yBAAA,CAAC,OAAO,EAAE,CAAC;;AAAA;IACvB,AAAIF,GAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACrB,AAAIC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEhB,AAAI,KAAKA,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAC/C,AAAI,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE;YAC1B,AAAID,GAAK,CAAC,IAAI,GAAGE,MAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YACzD,AAAI,IAAI,IAAI,GAAG,GAAG,EAAE;gBAChB,AAAI,GAAG,GAAG,IAAI,CAAC;YACnB,AAAI,CAAC;QACT,AAAI,CAAC;IACT,AAAI,CAAC;IACL,AAAI,OAAO,MAAM,GAAG,GAAG,CAAC;AAC5B,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,WAAW,wBAAA,GAAG;IACd,AAAIF,GAAK,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;;IAErE,AAAIA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,MAAM,EAAE;QAC1G,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;IAC7B,AAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;;IAEjB,AAAI,OAAO;QACP,AAAI,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QACxC,AAAI,QAAQ,EAAE,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;IAC9D,AAAI,CAAC,CAAC;AACV,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,KAAK,kBAAA,CAAC,QAAQ,EAAE,MAAM,EAAE;IACxB,AAAI,OAAO,MAAM,CAAC,MAAM,CAAC;QACrB,AAAI,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;IACrC,AAAI,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AAC/B,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,MAAM,mBAAA,GAAG;IACT,AAAIC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;;IAElB,AAAI,IAAI,IAAI,CAAC,SAAS,EAAE;QACpB,AAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACrC,AAAI,CAAC,MAAM;QACP,AAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACnC,AAAI,CAAC;;IAEL,AAAI,OAAO,KAAK,CAAC;AACrB,AAAI,CAAC,CAAA;;AAEL,AAAI,wBAAA,QAAQ,qBAAA,GAAG;IACX,AAAID,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAChC,AAAIA,GAAK,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,SAAA,GAAG,AAAG,SAAA,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;;IAE9D,AAAI,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,MAAM,EAAE;QACxD,AAAI,OAAO;YACP,AAAI,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC;YACrC,AAAI,SAAS,EAAE,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI;QAC9C,AAAI,CAAC,CAAC;IACV,AAAI,CAAC,CAAC,CAAC,CAAC;AACZ,AAAI,CAAC,CAAA,AACJ;;AAED,eAAe,aAAa,CAAC;"}