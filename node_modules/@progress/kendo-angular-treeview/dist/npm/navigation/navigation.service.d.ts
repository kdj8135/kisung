import { NavigationItem } from './navigation-item.interface';
import { NavigationModel } from './navigation-model';
import { NavigationState } from "./navigation-state.interface";
import { Subject } from "rxjs/Subject";
/**
 * @hidden
 */
export declare class NavigationService {
    readonly expands: Subject<NavigationState>;
    readonly moves: Subject<NavigationState>;
    readonly checks: Subject<string>;
    readonly selects: Subject<string>;
    navigable: boolean;
    model: NavigationModel;
    actions: {
        [x: string]: Function;
    };
    private activeItem;
    private isFocused;
    private _model;
    private readonly activeIndex;
    private readonly focusableItem;
    private readonly isActiveExpanded;
    activate(item: NavigationItem): void;
    activateParent(index: string): void;
    activateIndex(index: string): void;
    activateClosest(index: string): void;
    activateFocusable(): void;
    deactivate(): void;
    checkIndex(index: string): void;
    selectIndex(index: string): void;
    isActive(index: string): boolean;
    isFocusable(index: string): boolean;
    registerItem(index: string): void;
    unregisterItem(index: string): void;
    move(e: any): void;
    private expand({expand, intercept});
    private moveToParent();
    private moveToChild();
    private notifyExpand(expand);
    private notifyMove();
    private navigationState(expand?);
}
