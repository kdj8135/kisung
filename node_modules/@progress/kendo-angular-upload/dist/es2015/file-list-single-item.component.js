import { Input, Component } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { FileState } from './file-info';
import { FileListItemBase } from './file-list-item-base';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { UploadService } from './upload.service';
/**
 * @hidden
 */
export class FileListSingleItemComponent extends FileListItemBase {
    constructor(localization, uploadService) {
        super(uploadService);
        this.localization = localization;
        this.subscribeUploadProgress((args) => {
            if (args.files[0].uid === this.file.uid) {
                this.progressComplete = args.percentComplete;
            }
        });
    }
    /**
     * @hidden
     */
    textFor(key) {
        return this.localization.get(key);
    }
    /**
     * @hidden
     */
    get showProgress() {
        return (this.file.state === FileState.Uploading) ? 'active' : 'inactive';
    }
}
FileListSingleItemComponent.decorators = [
    { type: Component, args: [{
                animations: [
                    trigger('progressState', [
                        state('active', style({ opacity: 1 })),
                        state('inactive', style({ opacity: 0 })),
                        transition('void => active', style({ opacity: 0 })),
                        transition('inactive => active', style({ opacity: 1 })),
                        transition('active => inactive', animate('1s 2s ease-out'))
                    ])
                ],
                selector: 'kendo-upload-file-list-single-item',
                template: `
      <span class="k-progress" [style.width]="progressComplete + '%'" [@progressState]="showProgress"></span>
      <ng-template [ngIf]='file.validationErrors && file.validationErrors.length > 0'>
        <span class="k-file-invalid-extension-wrapper">
          <span class="k-file-invalid-icon">!</span>
          <span class="k-file-state"></span>
        </span>
        <span class="k-file-name-size-wrapper">
          <span class="k-file-name k-file-name-invalid" [title]="file.name">{{ file.name }}</span>
          <span class="k-file-validation-message">{{ getFileValidationMessage(file) }}</span>
        </span>
      </ng-template>
      <ng-template [ngIf]='!file.validationErrors || file.validationErrors.length === 0'>
        <span class="k-file-extension-wrapper">
          <span class="k-file-extension">{{ file.extension.substring(1) }}</span>
          <span class="k-file-state"></span>
        </span>
        <span class="k-file-name-size-wrapper">
          <span class="k-file-name" [title]="file.name">{{ file.name }}</span>
          <span class="k-file-size">{{ getTotalFilesSizeMessage([file]) }}</span>
        </span>
      </ng-template>
      <kendo-upload-file-list-item-action-button
        [file]='file'
        [disabled]='disabled'
        [async]='async'
        [progress]='progressComplete'>
      </kendo-upload-file-list-item-action-button>
    `
            },] },
];
/** @nocollapse */
FileListSingleItemComponent.ctorParameters = () => [
    { type: LocalizationService, },
    { type: UploadService, },
];
FileListSingleItemComponent.propDecorators = {
    'disabled': [{ type: Input },],
    'file': [{ type: Input },],
    'async': [{ type: Input },],
};
