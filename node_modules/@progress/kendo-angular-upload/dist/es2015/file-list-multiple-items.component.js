import { Input, Component } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { FileState } from './file-info';
import { FileListItemBase } from './file-list-item-base';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { UploadService } from './upload.service';
/**
 * @hidden
 */
export class FileListMultipleItemsComponent extends FileListItemBase {
    constructor(localization, uploadService) {
        super(uploadService);
        this.localization = localization;
        this.subscribeUploadProgress((args) => {
            if (args.files[0].uid === this.files[0].uid) {
                this.progressComplete = args.percentComplete;
            }
        });
    }
    /**
     * @hidden
     */
    setFileNameClasses(file) {
        return {
            "k-file-name": true,
            "k-file-name-invalid": super.fileHasValidationErrors(file)
        };
    }
    /**
     * @hidden
     */
    get showProgress() {
        return (this.files[0].state === FileState.Uploading) ? 'active' : 'inactive';
    }
    ngOnInit() {
        this.filesHaveErrors = super.filesHaveValidationErrors(this.files);
    }
}
FileListMultipleItemsComponent.decorators = [
    { type: Component, args: [{
                animations: [
                    trigger('progressState', [
                        state('active', style({ opacity: 1 })),
                        state('inactive', style({ opacity: 0 })),
                        transition('void => active', style({ opacity: 0 })),
                        transition('inactive => active', style({ opacity: 1 })),
                        transition('active => inactive', animate('1s 2s ease-out'))
                    ])
                ],
                selector: 'kendo-upload-file-list-multiple-items',
                template: `
      <span class="k-progress" [style.width]="progressComplete + '%'" [@progressState]="showProgress"></span>
      <span *ngIf="!filesHaveErrors" class="k-multiple-files-extension-wrapper">
        <span class="k-file-state"></span>
      </span>
      <span *ngIf="filesHaveErrors" class="k-multiple-files-invalid-extension-wrapper">
        <span class='k-file-invalid-icon'>!</span>
        <span class="k-file-state"></span>
      </span>
      <span class="k-file-name-size-wrapper">
        <span *ngFor="let file of files" [ngClass]="setFileNameClasses(file)" [title]="file.name">{{file.name}}</span>
        <span *ngIf="!filesHaveErrors"
              class="k-file-information">Total: {{ files.length }} files, {{ getTotalFilesSizeMessage(files) }}</span>
        <span *ngIf="filesHaveErrors" class="k-file-validation-message">{{ getInvalidFilesMessage() }}</span>
      </span>
      <kendo-upload-file-list-item-action-button
        [file]='files[0]'
        [disabled]='disabled'
        [async]='async'
        [progress]='progressComplete'>
      </kendo-upload-file-list-item-action-button>
    `
            },] },
];
/** @nocollapse */
FileListMultipleItemsComponent.ctorParameters = () => [
    { type: LocalizationService, },
    { type: UploadService, },
];
FileListMultipleItemsComponent.propDecorators = {
    'disabled': [{ type: Input },],
    'files': [{ type: Input },],
    'async': [{ type: Input },],
};
