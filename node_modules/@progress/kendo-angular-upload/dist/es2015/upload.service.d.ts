import { EventEmitter } from '@angular/core';
import { FileInfo } from './file-info';
import { FileMap } from './file-map';
import { HttpClient } from '@angular/common/http';
import { CancelEvent, ClearEvent, ErrorEvent, RemoveEvent, SelectEvent, SuccessEvent, UploadEvent, UploadProgressEvent } from './upload-events';
import { AsyncSettings } from './async-settings';
/**
 * @hidden
 */
export declare class UploadService {
    private http;
    cancelEvent: EventEmitter<CancelEvent>;
    clearEvent: EventEmitter<ClearEvent>;
    completeEvent: EventEmitter<any>;
    errorEvent: EventEmitter<ErrorEvent>;
    removeEvent: EventEmitter<RemoveEvent>;
    selectEvent: EventEmitter<SelectEvent>;
    successEvent: EventEmitter<SuccessEvent>;
    uploadEvent: EventEmitter<UploadEvent>;
    uploadProgressEvent: EventEmitter<UploadProgressEvent>;
    changeEvent: EventEmitter<Array<FileInfo>>;
    private fileList;
    constructor(http: HttpClient);
    readonly files: FileMap;
    onChange(): void;
    addFiles(files: Array<FileInfo>, async: AsyncSettings): void;
    addInitialFiles(initialFiles: Array<FileInfo>): void;
    removeFiles(uid: string, async: AsyncSettings): void;
    cancelFiles(uid: string): void;
    clearFiles(): void;
    uploadFiles(async: AsyncSettings): void;
    retryFiles(uid: string, async: AsyncSettings): void;
    private _uploadFiles(allFiles, async);
    private performRemove(files, async, removeEventArgs);
    private performUpload(files, async, uploadEventArgs);
    private onSuccess(successResponse, files, operation);
    private onError(errorResponse, files, operation);
    private onProgress(event, files);
    private checkAllComplete();
    private cloneRequestHeaders(headers);
    private populateRequestOptions(async, headers);
    private populateUploadFormData(files, saveField, clientData);
    private populateRemoveFormData(fileNames, removeField, clientData);
    private populateClientFormData(data, clientData);
}
