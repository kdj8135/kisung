import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';
import { FileState } from './file-info';
import { NavigationService } from './navigation.service';
import util from "./util";
/**
 * @hidden
 */
export class FileListItemDirective {
    constructor(el, navigationService) {
        this.navigationService = navigationService;
        this.fileClass = true;
        this.focused = false;
        this.element = el;
    }
    focus() {
        this.element.nativeElement.focus();
    }
    get uidAttribute() {
        return this.files[0].uid;
    }
    get tabIndex() {
        return "-1";
    }
    get kFileError() {
        return this.files[0].state === FileState.Failed;
    }
    get kFileInvalid() {
        return util.filesHaveValidationErrors(this.files);
    }
    get kFileProgress() {
        return this.files[0].state === FileState.Uploading;
    }
    get kFileSuccess() {
        return this.files[0].state === FileState.Uploaded ||
            this.files[0].state === FileState.Initial;
    }
    get kStateFocused() {
        return this.focused;
    }
    onFocus() {
        this.focused = true;
    }
    onBlur() {
        this.focused = false;
    }
    onClick(event) {
        event.preventDefault();
        if (!util.isFocusable(event.target) && !util.hasClasses(event.target, util.IGNORE_TARGET_CLASSSES)) {
            this.navigationService.focusedIndex = this.index;
        }
    }
}
FileListItemDirective.decorators = [
    { type: Directive, args: [{
                selector: '[kendoUploadFileListItem]'
            },] },
];
/** @nocollapse */
FileListItemDirective.ctorParameters = () => [
    { type: ElementRef, },
    { type: NavigationService, },
];
FileListItemDirective.propDecorators = {
    'files': [{ type: Input },],
    'index': [{ type: Input },],
    'fileClass': [{ type: HostBinding, args: ['class.k-file',] },],
    'uidAttribute': [{ type: HostBinding, args: ['attr.data-uid',] },],
    'tabIndex': [{ type: HostBinding, args: ['attr.tabIndex',] },],
    'kFileError': [{ type: HostBinding, args: ['class.k-file-error',] },],
    'kFileInvalid': [{ type: HostBinding, args: ['class.k-file-invalid',] },],
    'kFileProgress': [{ type: HostBinding, args: ['class.k-file-progress',] },],
    'kFileSuccess': [{ type: HostBinding, args: ['class.k-file-success',] },],
    'kStateFocused': [{ type: HostBinding, args: ['class.k-state-focused',] },],
    'onFocus': [{ type: HostListener, args: ["focus",] },],
    'onBlur': [{ type: HostListener, args: ["blur",] },],
    'onClick': [{ type: HostListener, args: ['click', ['$event'],] },],
};
