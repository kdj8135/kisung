import { Directive, HostListener, HostBinding, Inject, Optional, ElementRef, Renderer2 as Renderer } from '@angular/core';
import { Button } from '@progress/kendo-angular-buttons';
import { RTL } from '@progress/kendo-angular-l10n';
import { EditService } from './edit.service';
import { CELL_CONTEXT } from '../rendering/common/cell-context';
/**
 * Represents the `edit` command of the Grid.
 *
 * You can apply this directive to any `button` element inside a
 * [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).
 *
 * When an associated button with the directive is clicked, the
 * [`edit`]({% slug api_grid_gridcomponent %}#toc-edit) event
 * is triggered. For more information, refer to this [editing example]({% slug editing_grid %}).
 *
 * @example
 * ```ts-no-run
 * <kendo-grid>
 *   <kendo-grid-command-column title="command">
 *     <ng-template kendoGridCellTemplate>
 *       <button kendoGridEditCommand class="k-primary">Edit</button>
 *     </ng-template>
 *   </kendo-grid-command-column>
 * </kendo-grid>
 * ```
 *
 * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.
 */
export class EditCommandDirective extends Button {
    constructor(editService, cellContext, element, renderer, rtl) {
        super(element, renderer, null, rtl);
        this.editService = editService;
        this.rowIndex = cellContext.rowIndex;
    }
    /**
     * @hidden
     */
    click() {
        this.editService.beginEdit(this.rowIndex);
    }
    /**
     * @hidden
     */
    get visible() {
        return this.editService.isEdited(this.rowIndex) ? 'none' : '';
    }
    /**
     * @hidden
     */
    get buttonClass() {
        return true;
    }
    /**
     * @hidden
     */
    get commandClass() {
        return true;
    }
}
EditCommandDirective.decorators = [
    { type: Directive, args: [{
                selector: '[kendoGridEditCommand]'
            },] },
];
/** @nocollapse */
EditCommandDirective.ctorParameters = () => [
    { type: EditService, },
    { type: undefined, decorators: [{ type: Inject, args: [CELL_CONTEXT,] },] },
    { type: ElementRef, },
    { type: Renderer, },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [RTL,] },] },
];
EditCommandDirective.propDecorators = {
    'click': [{ type: HostListener, args: ['click',] },],
    'visible': [{ type: HostBinding, args: ['style.display',] },],
    'buttonClass': [{ type: HostBinding, args: ['class.k-button',] },],
    'commandClass': [{ type: HostBinding, args: ['class.k-grid-edit-command',] },],
};
