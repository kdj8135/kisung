// tslint:disable:no-access-missing-member
import { Input } from '@angular/core';
import { BaseFilterCellComponent, localizeOperators } from './base-filter-cell.component';
import { isNullOrEmptyString, extractFormat } from "../utils";
const dateOperators = localizeOperators({
    "filterEqOperator": "eq",
    "filterNotEqOperator": "neq",
    // tslint:disable-next-line:object-literal-sort-keys
    "filterAfterOrEqualOperator": "gte",
    "filterAfterOperator": "gt",
    "filterBeforeOrEqualOperator": "lte",
    "filterBeforeOperator": "lt",
    "filterIsNullOperator": "isnull",
    "filterIsNotNullOperator": "isnotnull"
});
/**
 * @hidden
 */
export class DateFilterComponent extends BaseFilterCellComponent {
    constructor(filterService, localization) {
        super(filterService);
        this.localization = localization;
        /**
         * The default filter operator. Defaults to `contains`.
         * @type {string}
         */
        this.operator = "gte";
        /**
         * Defines the active view that the Calendar initially renders.
         * By default, the active view is `month`.
         *
         * > You have to set `activeView` within the `topView`-`bottomView` range.
         */
        this.activeView = "month";
        /**
         * Defines the bottommost Calendar view, to which the user can navigate.
         */
        this.bottomView = "month";
        /**
         * Defines the topmost Calendar view, to which the user can navigate.
         */
        this.topView = "century";
        this.defaultOperators = dateOperators(this.localization);
    }
    /**
     * The current filter for the associated column field.
     * @readonly
     * @type {FilterDescriptor}
     */
    get currentFilter() {
        return this.filterByField(this.column.field);
    }
    /**
     * Specifies the date format used when the component is not focused.
     * By default, the `column.format` value is used, if set.
     */
    set format(value) {
        this._format = value;
    }
    /**
     * Specifies the date format used when the component is not focused.
     * By default, the `column.format` value is used, if set.
     *
     * @readonly
     * @type {string}
     */
    get format() {
        return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;
    }
    get columnFormat() {
        return this.column && !isNullOrEmptyString(this.column.format) ?
            extractFormat(this.column.format) : "d";
    }
    /**
     * The current filter operator for the associated column field.
     * @readonly
     * @type {string}
     */
    get currentOperator() {
        return this.currentFilter ? this.currentFilter.operator : this.operator;
    }
}
DateFilterComponent.propDecorators = {
    'column': [{ type: Input },],
    'filter': [{ type: Input },],
    'operator': [{ type: Input },],
    'format': [{ type: Input },],
    'min': [{ type: Input },],
    'max': [{ type: Input },],
    'formatPlaceholder': [{ type: Input },],
    'placeholder': [{ type: Input },],
    'activeView': [{ type: Input },],
    'bottomView': [{ type: Input },],
    'topView': [{ type: Input },],
};
