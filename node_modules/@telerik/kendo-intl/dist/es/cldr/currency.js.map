{"version":3,"file":"currency.js","sources":["currency.js"],"sourcesContent":["import { cldr, getLocaleInfo } from './info';\nimport { errors } from '../errors';\nimport localeTerritory from './territory';\nimport parseRangeDate from './parse-range-date';\n\n/* eslint-disable consistent-return */\n\nconst {\n    NoCurrency,\n    NoCurrencyDisplay,\n    NoSupplementalCurrency,\n    NoCurrencyRegion,\n    NoValidCurrency\n} = errors;\n\nconst DEFAULT_CURRENCY_FRACTIONS = 2;\nconst SYMBOL = \"symbol\";\nconst INVALID_CURRENCY_CODE = 'XXX';\n\nconst GLOBAL_CURRENCIES = {\n    '001': 'USD', // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error\n    '150': 'EUR' // 150 territory for Europe\n\n};\n\nfunction getCurrencyInfo(locale, currency, throwIfNoValid) {\n    const info = getLocaleInfo(locale);\n    const currencies = info.numbers.currencies;\n    if (!currencies) {\n        if (throwIfNoValid) {\n            throw NoCurrency.error();\n        }\n\n        return;\n    }\n\n    const currencyDisplayInfo = currencies[currency];\n\n    if (!currencyDisplayInfo) {\n        if (throwIfNoValid) {\n            throw NoCurrencyDisplay.error();\n        }\n\n        return;\n    }\n\n    return currencyDisplayInfo;\n}\n\nfunction lengthComparer(a, b) {\n    return b.length - a.length;\n}\n\nfunction regionCurrency(regionCurrencies) {\n    let latestValidUntil, latestValidUntilRange;\n    let latestStillValid, latestStillValidDate;\n\n    for (let idx = 0; idx < regionCurrencies.length; idx++) {\n        const currency = regionCurrencies[idx];\n        const code = Object.keys(currency)[0];\n        const info = currency[code];\n        if (code !== INVALID_CURRENCY_CODE && info._tender !== 'false' && info._from) {\n            if (!info._to) {\n                const stillValidDate = parseRangeDate(info._from);\n                if (!latestStillValidDate || latestStillValidDate < stillValidDate) {\n                    latestStillValid = code;\n                    latestStillValidDate = stillValidDate;\n                }\n            } else if (!latestStillValid) {\n                const validFrom = parseRangeDate(info._from);\n                const validTo = parseRangeDate(info._to);\n                if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {\n                    latestValidUntil = code;\n                    latestValidUntilRange = {\n                        from: validFrom,\n                        to: validTo\n                    };\n                }\n            }\n        }\n    }\n\n    return latestStillValid || latestValidUntil;\n}\n\nexport function currencyDisplays(locale, currency, throwIfNoValid = true) {\n    const currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);\n    if (!currencyInfo) {\n        return;\n    }\n\n    if (!currencyInfo.displays) {\n        const displays = [ currency ];\n        for (let field in currencyInfo) {\n            displays.push(currencyInfo[field]);\n        }\n        displays.sort(lengthComparer);\n        currencyInfo.displays = displays;\n    }\n\n    return currencyInfo.displays;\n}\n\nexport function currencyDisplay(locale, options) {\n    const { value, currency, currencyDisplay = SYMBOL } = options;\n\n    if (currencyDisplay === \"code\") {\n        return currency;\n    }\n\n    const currencyInfo = getCurrencyInfo(locale, currency, true);\n    let result;\n\n    if (currencyDisplay === SYMBOL) {\n        result = currencyInfo[\"symbol-alt-narrow\"] || currencyInfo[SYMBOL];\n    } else {\n        if (typeof value === undefined || value !== 1) {\n            result = currencyInfo[\"displayName-count-other\"];\n        } else {\n            result = currencyInfo[\"displayName-count-one\"];\n        }\n    }\n\n    return result;\n}\n\nexport function currencyFractionOptions(code) {\n    let minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n    let maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n\n    const fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];\n\n    if (fractions && fractions._digits) {\n        maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);\n    }\n\n    return {\n        minimumFractionDigits: minimumFractionDigits,\n        maximumFractionDigits: maximumFractionDigits\n    };\n}\n\nexport function territoryCurrencyCode(territory, throwIfNoValid = true) {\n    if (GLOBAL_CURRENCIES[territory]) {\n        return GLOBAL_CURRENCIES[territory];\n    }\n\n    const currencyData = cldr.supplemental.currencyData;\n    if (!currencyData) {\n        if (throwIfNoValid) {\n            throw NoSupplementalCurrency.error();\n        }\n\n        return;\n    }\n\n    const regionCurrencies = currencyData.region[territory];\n\n    if (!regionCurrencies) {\n        if (throwIfNoValid) {\n            throw NoCurrencyRegion.error(territory);\n        }\n\n        return;\n    }\n\n    const currencyCode = regionCurrency(regionCurrencies);\n\n    return currencyCode;\n}\n\nexport function localeCurrency(locale, throwIfNoValid) {\n    const info = getLocaleInfo(locale);\n    const numbers = info.numbers;\n\n    if (!numbers.localeCurrency) {\n        const currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);\n\n        if (!currency && throwIfNoValid) {\n            throw NoValidCurrency.error(info.name);\n        }\n\n        numbers.localeCurrency = currency;\n    }\n\n    return numbers.localeCurrency;\n}\n"],"names":["const","let"],"mappings":"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"}