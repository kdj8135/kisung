{"version":3,"file":"date-pattern.js","sources":["date-pattern.js"],"sourcesContent":["import formatString from '../common/format-string';\nimport isString from '../common/is-string';\nimport { EMPTY } from '../common/constants';\n\nconst REMOVAL_PENALTY = 120;\nconst ADDITION_PENALTY = 20;\nconst LENGHT_DELTA = [ 2, 1, 5, 3, 4 ];\nconst LONG_LESS_PENALTY_DELTA = -2;\nconst SHORT_LESS_PENALTY_DELTA = -1;\nconst SHORT_MORE_PENALTY_DELTA = 1;\nconst LONG_MORE_PENALTY_DELTA = 2;\n\nconst PENALTIES = {\n    [LONG_LESS_PENALTY_DELTA.toString()]: 8,\n    [SHORT_LESS_PENALTY_DELTA.toString()]: 6,\n    [LONG_MORE_PENALTY_DELTA.toString()]: 6,\n    [SHORT_MORE_PENALTY_DELTA.toString()]: 3\n};\n\nconst VALUE_FORMAT_LENGTH = {\n    numeric: 1,\n    \"2-digit\": 2,\n    short: 3,\n    long: 4,\n    narrow: 5\n};\n\nconst TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;\n\nfunction getHourSpecifier(options) {\n    return options.hour12 ? \"h\" : \"H\";\n}\n\nconst DATE_OPTIONS_MAP = [ {\n    key: \"era\",\n    specifier: \"G\"\n}, {\n    key: \"year\",\n    specifier: \"y\"\n}, {\n    key: \"month\",\n    specifier: \"M\"\n}, {\n    key: \"day\",\n    specifier: \"d\"\n}, {\n    key: \"weekday\",\n    specifier: \"E\"\n}, {\n    key: \"hour\",\n    getSpecifier: getHourSpecifier\n}, {\n    key: \"minute\",\n    specifier: \"m\"\n}, {\n    key: \"second\",\n    specifier: \"s\"\n}, {\n    key: \"timeZoneName\",\n    specifier: \"z\"\n} ];\n\nconst STAND_ALONE_SPECIFIERS = {\n    e: 'c',\n    E: 'c',\n    M: 'L',\n    Q: 'q'\n};\n\nconst specifiersRegex = {};\nconst resolvedFormats = {};\n\nfunction getSpecifierRegex(specifier) {\n    if (!specifiersRegex[specifier]) {\n        specifiersRegex[specifier] = new RegExp(specifier + \"+\");\n    }\n    return specifiersRegex[specifier];\n}\n\nfunction skeletonSpecifiers(skeleton) {\n    const result = [];\n    let current = skeleton.charAt(0);\n    let specifier = current;\n    for (let idx = 1; idx < skeleton.length; idx++) {\n        let character = skeleton.charAt(idx);\n        if (character === specifier) {\n            current += character;\n        } else {\n            result.push(current);\n            current = specifier = character;\n        }\n    }\n\n    result.push(current);\n\n    return result;\n}\n\nfunction findBestMatch(specifiers, availableFormats) {\n    const specifiersLength = specifiers.length;\n    let maxScore = -Number.MAX_VALUE;\n    let bestMatches, result;\n    for (let format in availableFormats) {\n        const matches = [];\n        let currentFormat = format.replace(\"v\", \"z\");\n        let score = 0;\n        for (let idx = 0; idx < specifiersLength; idx++) {\n            const specifier = specifiers[idx];\n            let specifierRegex = getSpecifierRegex(specifier[0]);\n            let match = (specifierRegex.exec(currentFormat) || [])[0];\n\n            if (!match) {\n                score -= REMOVAL_PENALTY;\n            } else {\n                currentFormat = currentFormat.replace(match, EMPTY);\n                if (match.length !== specifier.length) {\n                    let delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);\n                    score -= PENALTIES[delta];\n                }\n            }\n\n            matches.push(match);\n\n            if (score < maxScore) {\n                break;\n            }\n        }\n\n        if (currentFormat.length) {\n            score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;\n        }\n\n        if (score > maxScore) {\n            maxScore = score;\n            bestMatches = matches;\n            result = availableFormats[format];\n        }\n    }\n\n    result = result.replace(\"v\", \"z\");\n\n    for (let idx = 0; idx < specifiersLength; idx++) {\n        const bestMatch = bestMatches[idx];\n        if (bestMatch && bestMatch !== specifiers[idx]) {\n            const matchSpecifier = bestMatches[idx][0];\n            result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx]);\n            if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {\n                result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx]);\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction cacheFormat(skeleton, format, locale) {\n    if (!resolvedFormats[locale]) {\n        resolvedFormats[locale] = {};\n    }\n    resolvedFormats[locale][skeleton] = format;\n}\n\n\nfunction skeletonFormat(skeleton, info) {\n    const availableFormats = info.calendar.dateTimeFormats.availableFormats;\n    if (availableFormats[skeleton]) {\n        return availableFormats[skeleton];\n    }\n    if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {\n        return resolvedFormats[info.name][skeleton];\n    }\n    const timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);\n    let result;\n    if (timeStartIndex > 0) {\n        const dateSkeleton = skeleton.substr(0, timeStartIndex);\n        const timeSkeleton = skeleton.substr(timeStartIndex);\n\n        result = formatString(info.calendar.dateTimeFormats.short, //should be deterimed based on specifiers\n            availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),\n            availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats));\n    } else {\n        result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);\n    }\n\n    cacheFormat(skeleton, result, info.name);\n    return result;\n}\n\nfunction skeletonFromOptions(options) {\n    let result = [];\n    for (let idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {\n        let option = DATE_OPTIONS_MAP[idx];\n        let field = option.key;\n        let value = options[field];\n        if (value) {\n            let spcifier = option.specifier || option.getSpecifier(options);\n            result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));\n        }\n    }\n\n    return result.join(EMPTY);\n}\n\nexport default function datePattern(format, info) {\n    const calendar = info.calendar;\n    let result;\n    if (isString(format)) {\n        if (calendar.patterns[format]) {\n            result = calendar.patterns[format];\n        } else {\n            result = format;\n        }\n    } else if (format) {\n        if (format.pattern) {\n            return format.pattern;\n        }\n\n        let skeleton = format.skeleton;\n        if (!skeleton) {\n            if (format.datetime) {\n                result = formatString(calendar.dateTimeFormats[format.datetime], calendar.timeFormats[format.datetime], calendar.dateFormats[format.datetime]);\n            } else if (format.date) {\n                result = calendar.dateFormats[format.date];\n            } else if (format.time) {\n                result = calendar.timeFormats[format.time];\n            } else {\n                skeleton = skeletonFromOptions(format);\n            }\n        }\n\n        if (skeleton) {\n            result = skeletonFormat(skeleton, info);\n        }\n    }\n\n    if (!result) {\n        result = calendar.patterns.d;\n    }\n\n    return result;\n}\n"],"names":["const","let","idx"],"mappings":"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"}