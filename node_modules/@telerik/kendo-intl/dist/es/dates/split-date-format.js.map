{"version":3,"file":"split-date-format.js","sources":["split-date-format.js"],"sourcesContent":["import { DEFAULT_LOCALE } from '../common/constants';\nimport isNumber from '../common/is-number';\nimport datePattern from './date-pattern';\nimport dateNameType from './date-name-type';\nimport { dateFormatRegExp, DATE_FIELD_MAP } from './constants';\nimport { localeInfo } from '../cldr';\n\nconst NAME_TYPES = {\n    month: {\n        type: 'months',\n        minLength: 3,\n        standAlone: 'L'\n    },\n\n    quarter: {\n        type: 'quarters',\n        minLength: 3,\n        standAlone: 'q'\n    },\n\n    weekday: {\n        type: 'days',\n        minLength: {\n            E: 0,\n            c: 3,\n            e: 3\n        },\n        standAlone: 'c'\n    },\n\n    dayperiod: {\n        type: 'dayPeriods',\n        minLength: 0\n    },\n\n    era: {\n        type: 'eras',\n        minLength: 0\n    }\n};\n\nconst LITERAL = 'literal';\n\nfunction addLiteral(parts, value) {\n    const lastPart = parts[parts.length - 1];\n    if (lastPart && lastPart.type === LITERAL) {\n        lastPart.pattern += value;\n    } else {\n        parts.push({\n            type: LITERAL,\n            pattern: value\n        });\n    }\n}\n\nfunction isHour12(pattern) {\n    return pattern === 'h' || pattern === 'K';\n}\n\nexport default function splitDateFormat(format, locale = DEFAULT_LOCALE) {\n    const info = localeInfo(locale);\n    const pattern = datePattern(format, info);\n    const parts = [];\n    let lastIndex = dateFormatRegExp.lastIndex = 0;\n    let match = dateFormatRegExp.exec(pattern);\n\n    while (match) {\n        let value = match[0];\n\n        if (lastIndex < match.index) {\n            addLiteral(parts, pattern.substring(lastIndex, match.index));\n        }\n\n        if (value.startsWith('\"') || value.startsWith(\"'\")) {\n            addLiteral(parts, value);\n        } else {\n            const specifier = value[0];\n            const type = DATE_FIELD_MAP[specifier];\n            const part = {\n                type: type,\n                pattern: value\n            };\n\n            if (type === 'hour') {\n                part.hour12 = isHour12(value);\n            }\n\n            const names = NAME_TYPES[type];\n\n            if (names) {\n                const minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];\n                const patternLength = value.length;\n\n                if (patternLength >= minLength) {\n                    part.names = {\n                        type: names.type,\n                        nameType: dateNameType(patternLength),\n                        standAlone: names.standAlone === specifier\n                    };\n                }\n            }\n\n            parts.push(part);\n        }\n\n        lastIndex = dateFormatRegExp.lastIndex;\n        match = dateFormatRegExp.exec(pattern);\n    }\n\n    if (lastIndex < pattern.length) {\n        addLiteral(parts, pattern.substring(lastIndex));\n    }\n\n    return parts;\n}\n"],"names":["const","let"],"mappings":"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"}