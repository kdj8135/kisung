{"version":3,"file":"custom-number-format.js","sources":["custom-number-format.js"],"sourcesContent":["import { CURRENCY, PERCENT, LIST_SEPARATOR, GROUP_SEPARATOR, CURRENCY_PLACEHOLDER, PERCENT_PLACEHOLDER, POINT, EMPTY } from '../common/constants';\nimport formatCurrencySymbol from './format-currency-symbol';\nimport groupInteger from './group-integer';\nimport round from '../common/round';\n\nconst PLACEHOLDER = \"__??__\";\n\nconst SHARP = \"#\";\nconst ZERO = \"0\";\n\nconst literalRegExp = /(\\\\.)|(['][^']*[']?)|([\"][^\"]*[\"]?)/g;\nconst trailingZerosRegExp = /(\\.(?:[0-9]*[1-9])?)0+$/g;\nconst trailingPointRegExp = /\\.$/;\nconst commaRegExp = /\\,/g;\n\nfunction setFormatLiterals(formatOptions) {\n    let format = formatOptions.format;\n    if (format.indexOf(\"'\") > -1 || format.indexOf(\"\\\"\") > -1 || format.indexOf(\"\\\\\") > -1) {\n        const literals = formatOptions.literals = [];\n        formatOptions.format = format.replace(literalRegExp, function(match) {\n            const quoteChar = match.charAt(0).replace(\"\\\\\", EMPTY);\n            const literal = match.slice(1).replace(quoteChar, EMPTY);\n\n            literals.push(literal);\n\n            return PLACEHOLDER;\n        });\n    }\n}\n\nfunction trimTrailingZeros(value, lastZero) {\n    let trimRegex;\n\n    if (lastZero === 0) {\n        trimRegex = trailingZerosRegExp;\n    } else {\n        trimRegex = new RegExp(`(\\\\.[0-9]{${ lastZero }}[1-9]*)0+$`, 'g');\n    }\n\n    return value.replace(trimRegex, '$1').replace(trailingPointRegExp, EMPTY);\n}\n\nfunction roundNumber(formatOptions) {\n    let { number, format } = formatOptions;\n    let decimalIndex = format.indexOf(POINT);\n\n    if (decimalIndex !== -1) {\n        const zeroIndex = format.lastIndexOf(ZERO) - decimalIndex;\n        const sharpIndex = format.lastIndexOf(SHARP) - decimalIndex;\n        const hasZero = zeroIndex > -1;\n        const hasSharp = sharpIndex > -1;\n        let fraction = number.toString().split(\"e\");\n\n        if (fraction[1]) {\n            fraction = round(number, Math.abs(fraction[1]));\n        } else {\n            fraction = fraction[0];\n        }\n        fraction = fraction.split(POINT)[1] || EMPTY;\n\n        let precision = fraction.length;\n        let trailingZeros = -1;\n\n        if (!hasZero && !hasSharp) {\n            formatOptions.format = format.substring(0, decimalIndex) + format.substring(decimalIndex + 1);\n            decimalIndex = -1;\n            precision = 0;\n        } else if (hasZero && zeroIndex > sharpIndex) {\n            precision = zeroIndex;\n        } else if (sharpIndex > zeroIndex) {\n            if (hasSharp && precision > sharpIndex) {\n                precision = sharpIndex;\n            } else if (hasZero && precision < zeroIndex) {\n                precision = zeroIndex;\n            }\n\n            trailingZeros = hasZero ? zeroIndex : 0;\n        }\n\n        if (precision > -1) {\n            number = round(number, precision);\n            if (trailingZeros > -1) {\n                number = trimTrailingZeros(number, trailingZeros);\n            }\n        }\n    } else {\n        number = round(number);\n    }\n\n    if (formatOptions.negative && (number * -1) >= 0) {\n        formatOptions.negative = false;\n    }\n\n    formatOptions.number = number;\n    formatOptions.decimalIndex = decimalIndex;\n}\n\nfunction isConstantFormat(format) {\n    return format.indexOf(SHARP) === -1 && format.indexOf(ZERO) === -1;\n}\n\nfunction setValueSpecificFormat(formatOptions) {\n    let { number, format } = formatOptions;\n    format = format.split(LIST_SEPARATOR);\n    if (formatOptions.negative && format[1]) {\n        format = format[1];\n        formatOptions.hasNegativeFormat = true;\n    } else if (number === 0) {\n        const zeroFormat = format[2];\n        format = zeroFormat || format[0];\n        if (zeroFormat && isConstantFormat(zeroFormat)) {\n            formatOptions.constant = zeroFormat;\n        }\n    } else {\n        format = format[0];\n    }\n\n    formatOptions.format = format;\n}\n\nfunction setStyleOptions(formatOptions, info) {\n    const format = formatOptions.format;\n\n    //multiply number if the format has percent\n    if (format.indexOf(PERCENT_PLACEHOLDER) !== -1) {\n        formatOptions.style = PERCENT;\n        formatOptions.symbol = info.numbers.symbols.percentSign;\n        formatOptions.number *= 100;\n    }\n\n    if (format.indexOf(CURRENCY_PLACEHOLDER) !== -1) {\n        formatOptions.style = CURRENCY;\n        formatOptions.symbol = formatCurrencySymbol(info);\n    }\n}\n\nfunction setGroupOptions(formatOptions) {\n    formatOptions.hasGroup = formatOptions.format.indexOf(GROUP_SEPARATOR) > -1;\n    if (formatOptions.hasGroup) {\n        formatOptions.format = formatOptions.format.replace(commaRegExp, EMPTY);\n    }\n}\n\nfunction placeholderIndex(index1, index2, start) {\n    let index;\n    if (index1 === -1 && index2 !== -1) {\n        index = index2;\n    } else if (index1 !== -1 && index2 === -1) {\n        index = index1;\n    } else {\n        index = start ? Math.min(index1, index2) : Math.max(index1, index2);\n    }\n    return index;\n}\n\nfunction setPlaceholderIndices(formatOptions) {\n    const format = formatOptions.format;\n    let sharpIndex = format.indexOf(SHARP);\n    let zeroIndex = format.indexOf(ZERO);\n\n    let start = placeholderIndex(sharpIndex, zeroIndex, true);\n\n    sharpIndex = format.lastIndexOf(SHARP);\n    zeroIndex = format.lastIndexOf(ZERO);\n\n    let end = placeholderIndex(sharpIndex, zeroIndex);\n\n    if (start === format.length) {\n        end = start;\n    }\n\n    formatOptions.start = start;\n    formatOptions.end = end;\n    formatOptions.lastZeroIndex = zeroIndex;\n}\n\nfunction replaceStyleSymbols(number, style, symbol) {\n    let result = number;\n    if (style === CURRENCY || style === PERCENT) {\n        result = EMPTY;\n        for (let idx = 0, length = number.length; idx < length; idx++) {\n            let ch = number.charAt(idx);\n            result += (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) ? symbol : ch;\n        }\n    }\n    return result;\n}\n\nfunction replaceLiterals(number, literals) {\n    let result = number;\n    if (literals) {\n        const length = literals.length;\n        for (let idx = 0; idx < length; idx++) {\n            result = result.replace(PLACEHOLDER, literals[idx]);\n        }\n    }\n    return result;\n}\n\nfunction replacePlaceHolders(formatOptions, info) {\n    const { start, end, negative, format, decimalIndex, lastZeroIndex, hasNegativeFormat, hasGroup } = formatOptions;\n    let number = formatOptions.number;\n    const value = number.toString().split(POINT);\n    const length = format.length;\n    const integer = value[0];\n    const fraction = value[1] || EMPTY;\n    const integerLength = integer.length;\n    let replacement = EMPTY;\n\n    number = format.substring(0, start);\n\n    if (negative && !hasNegativeFormat) {\n        number += \"-\";\n    }\n\n    for (let idx = start; idx < length; idx++) {\n        let ch = format.charAt(idx);\n\n        if (decimalIndex === -1) {\n            if (end - idx < integerLength) {\n\n                number += integer;\n                break;\n            }\n        } else {\n            if (lastZeroIndex !== -1 && lastZeroIndex < idx) {\n                replacement = EMPTY;\n            }\n\n            if ((decimalIndex - idx) <= integerLength && decimalIndex - idx > -1) {\n                number += integer;\n                idx = decimalIndex;\n            }\n\n            if (decimalIndex === idx) {\n                number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;\n                idx += end - decimalIndex + 1;\n                continue;\n            }\n        }\n\n        if (ch === ZERO) {\n            number += ch;\n            replacement = ch;\n        } else if (ch === SHARP) {\n            number += replacement;\n        }\n    }\n\n    if (hasGroup) {\n        number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, (integerLength + start)), info.numbers.decimal, info);\n    }\n\n    if (end >= start) {\n        number += format.substring(end + 1);\n    }\n\n    return number;\n}\n\nfunction applyCustomFormat(formatOptions, info) {\n    let number = formatOptions.number;\n    if (formatOptions.start !== -1) {\n        number = replacePlaceHolders(formatOptions, info);\n        number = replaceStyleSymbols(number, formatOptions.style, formatOptions.symbol);\n        number = replaceLiterals(number, formatOptions.literals);\n    }\n\n    return number;\n}\n\nexport default function customNumberFormat(number, format, info) {\n    const formatOptions = {\n        negative: number < 0,\n        number: Math.abs(number),\n        format: format\n    };\n\n    setValueSpecificFormat(formatOptions);\n\n    if (formatOptions.constant) {\n        return formatOptions.constant;\n    }\n\n    setFormatLiterals(formatOptions);\n    setStyleOptions(formatOptions, info);\n    setGroupOptions(formatOptions);\n    roundNumber(formatOptions);\n    setPlaceholderIndices(formatOptions);\n\n    return applyCustomFormat(formatOptions, info);\n}"],"names":["const","let"],"mappings":"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"}