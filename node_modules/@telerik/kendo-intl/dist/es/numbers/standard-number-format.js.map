{"version":3,"file":"standard-number-format.js","sources":["standard-number-format.js"],"sourcesContent":["import { PERCENT, SCIENTIFIC, NUMBER_PLACEHOLDER, CURRENCY_PLACEHOLDER, PERCENT_PLACEHOLDER, EMPTY, POINT } from '../common/constants';\nimport formatCurrencySymbol from './format-currency-symbol';\nimport groupInteger from './group-integer';\nimport isCurrencyStyle from './is-currency-style';\nimport pad from '../common/pad';\nimport round from '../common/round';\nimport { currencyFractionOptions } from '../cldr';\n\nconst DEFAULT_DECIMAL_ROUNDING = 3;\nconst DEFAULT_PERCENT_ROUNDING = 0;\n\nconst trailingZeroRegex = /0+$/;\n\nfunction fractionOptions(options) {\n    let { minimumFractionDigits, maximumFractionDigits, style } = options;\n    const isCurrency = isCurrencyStyle(style);\n    let currencyFractions;\n    if (isCurrency) {\n        currencyFractions = currencyFractionOptions(options.currency);\n    }\n\n    if (minimumFractionDigits === undefined) {\n        minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;\n    }\n\n    if (maximumFractionDigits === undefined) {\n        if (style === PERCENT) {\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);\n        } else if (isCurrency) {\n            maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);\n        } else {\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);\n        }\n    }\n\n    return {\n        minimumFractionDigits: minimumFractionDigits,\n        maximumFractionDigits: maximumFractionDigits\n    };\n}\n\nfunction applyPattern(value, pattern, symbol) {\n    let result = EMPTY;\n    for (let idx = 0, length = pattern.length; idx < length; idx++) {\n        let ch = pattern.charAt(idx);\n\n        if (ch === NUMBER_PLACEHOLDER) {\n            result += value;\n        } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {\n            result += symbol;\n        } else {\n            result += ch;\n        }\n    }\n    return result;\n}\n\nfunction currencyUnitPattern(info, value) {\n    const currencyInfo = info.numbers.currency;\n    let pattern = value !== 1 ? currencyInfo[\"unitPattern-count-other\"] : currencyInfo[\"unitPattern-count-one\"];\n    if (value < 0) {\n        pattern = pattern.replace(NUMBER_PLACEHOLDER, `-${ NUMBER_PLACEHOLDER }`);\n    }\n\n    return pattern;\n}\n\n\nexport default function standardNumberFormat(number, options, info) {\n    const symbols = info.numbers.symbols;\n    const { style } = options;\n    const isCurrency = isCurrencyStyle(style);\n\n    //return number in exponential format\n    if (style === SCIENTIFIC) {\n        let exponential = options.minimumFractionDigits !== undefined ? number.toExponential(options.minimumFractionDigits) : number.toExponential();\n        return exponential.replace(POINT, symbols.decimal);\n    }\n\n    let value = number;\n    let symbol;\n\n    if (isCurrency) {\n        options.value = value;\n        symbol = formatCurrencySymbol(info, options);\n    }\n\n    if (style === PERCENT) {\n        value *= 100;\n        symbol = symbols.percentSign;\n    }\n\n    const { minimumFractionDigits, maximumFractionDigits } = fractionOptions(options);\n\n    value = round(value, maximumFractionDigits);\n\n    const negative = value < 0;\n\n    const parts = value.split(POINT);\n\n    let integer = parts[0];\n    let fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);\n\n    //exclude \"-\" if number is negative.\n    if (negative) {\n        integer = integer.substring(1);\n    }\n\n    if (options.minimumIntegerDigits) {\n        integer = pad(integer, options.minimumIntegerDigits);\n    }\n\n    let formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;\n\n    if (fraction) {\n        formattedValue += symbols.decimal + fraction;\n    }\n\n    let pattern;\n\n    if (isCurrency && options.currencyDisplay === \"name\") {\n        pattern = currencyUnitPattern(info, number);\n    } else {\n        const patterns = options.patterns;\n        pattern = negative ? patterns[1] || (\"-\" + patterns[0]) : patterns[0];\n    }\n\n    if (pattern === NUMBER_PLACEHOLDER && !negative) {\n        return formattedValue;\n    }\n\n    const result = applyPattern(formattedValue, pattern, symbol);\n\n    return result;\n}"],"names":["const","let"],"mappings":"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"}