{"version":3,"file":"parse-number.js","sources":["parse-number.js"],"sourcesContent":["import { localeInfo, localeCurrency, currencyDisplays } from '../cldr';\nimport { PERCENT, NUMBER_PLACEHOLDER, CURRENCY_PLACEHOLDER, DEFAULT_LOCALE, EMPTY, POINT } from '../common/constants';\nimport isNumber from '../common/is-number';\nimport isCurrencyStyle from './is-currency-style';\nimport formatOptions from './format-options';\n\nconst exponentRegExp = /[eE][\\-+]?[0-9]+/;\nconst nonBreakingSpaceRegExp = /\\u00A0/g;\n\nfunction cleanNegativePattern(number, patterns) {\n    if (patterns.length > 1) {\n        const parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);\n        if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {\n            return number.replace(parts[0], EMPTY).replace(parts[1], EMPTY);\n        }\n    }\n}\n\nfunction cleanCurrencyNumber(value, info, format) {\n    const options = formatOptions(format) || {};\n    let isCurrency = isCurrencyStyle(options.style);\n    let number = value;\n    let negative;\n\n    const currency = options.currency || localeCurrency(info, isCurrency);\n\n    if (currency) {\n        const displays = currencyDisplays(info, currency, isCurrency);\n        if (displays) {\n            for (let idx = 0; idx < displays.length; idx++) {\n                let display = displays[idx];\n                if (number.includes(display)) {\n                    number = number.replace(display, EMPTY);\n                    isCurrency = true;\n                    break;\n                }\n            }\n        }\n\n        if (isCurrency) {\n            const cleanNumber = cleanNegativePattern(number, info.numbers.currency.patterns) ||\n                cleanNegativePattern(number, info.numbers.accounting.patterns);\n\n            if (cleanNumber) {\n                negative = true;\n                number = cleanNumber;\n            }\n\n        }\n    }\n\n    return {\n        number: number,\n        negative: negative\n    };\n}\n\nexport default function parseNumber(value, locale = DEFAULT_LOCALE, format = {}) {\n    if (!value && value !== 0) {\n        return null;\n    }\n\n    if (isNumber(value)) {\n        return value;\n    }\n\n    const info = localeInfo(locale);\n    const symbols = info.numbers.symbols;\n\n    let number = value.toString();\n    let isPercent;\n\n    if (exponentRegExp.test(number)) {\n        number = parseFloat(number.replace(symbols.decimal, POINT));\n        return isNaN(number) ? null : number;\n    }\n\n    const negativeSignIndex = number.indexOf(\"-\");\n    if (negativeSignIndex > 0) {\n        return null;\n    }\n\n    let isNegative = negativeSignIndex > -1;\n    const { negative: negativeCurrency, number: newNumber } = cleanCurrencyNumber(number, info, format);\n\n    number = newNumber;\n    isNegative = negativeCurrency !== undefined ? negativeCurrency : isNegative;\n\n    if (format.style === PERCENT || number.indexOf(symbols.percentSign) > -1) {\n        number = number.replace(symbols.percentSign, EMPTY);\n        isPercent = true;\n    }\n\n    number = number.replace(\"-\", EMPTY)\n          .replace(nonBreakingSpaceRegExp, \" \")\n          .split(symbols.group.replace(nonBreakingSpaceRegExp, \" \")).join(EMPTY)\n          .replace(symbols.decimal, POINT);\n\n    number = parseFloat(number);\n\n    if (isNaN(number)) {\n        number = null;\n    } else if (isNegative) {\n        number *= -1;\n    }\n\n    if (number && isPercent) {\n        number /= 100;\n    }\n\n    return number;\n}\n"],"names":["const","let"],"mappings":"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"}