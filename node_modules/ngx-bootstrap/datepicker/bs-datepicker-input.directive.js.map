{"version":3,"sources":["../../.tmp/datepicker/bs-datepicker-input.directive.ts"],"names":[],"mappings":"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","file":"bs-datepicker-input.directive.js","sourceRoot":"","sourcesContent":["import { ChangeDetectorRef, Directive, ElementRef, forwardRef, Host, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BsDatepickerDirective } from './bs-datepicker.component';\nimport { formatDate } from '../bs-moment/format';\nimport { getLocale } from '../bs-moment/locale/locales.service';\nimport { BsLocaleService } from './bs-locale.service';\n\nconst BS_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => BsDatepickerInputDirective),\n  multi: true\n};\n\n\nexport class BsDatepickerInputDirective\n  implements ControlValueAccessor {\n  private _onChange = Function.prototype;\n  private _onTouched = Function.prototype;\n  private _value: Date;\n\n  constructor( private _picker: BsDatepickerDirective,\n              private _localeService: BsLocaleService,\n              private _renderer: Renderer2,\n              private _elRef: ElementRef,\n              private changeDetection: ChangeDetectorRef) {\n    // update input value on datepicker value update\n    this._picker.bsValueChange.subscribe((value: Date) => {\n      this._setInputValue(value);\n      if (this._value !== value) {\n        this._value = value;\n        this._onChange(value);\n        this._onTouched();\n      }\n      this.changeDetection.markForCheck();\n    });\n\n    // update input value on locale change\n    this._localeService.localeChange.subscribe(() => {\n      this._setInputValue(this._value);\n    });\n  }\n\n  _setInputValue(value: Date): void {\n    const initialDate = formatDate(\n      value,\n      this._picker._config.dateInputFormat,\n      this._localeService.currentLocale\n    ) || '';\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', initialDate);\n  }\n\n  onChange(event: any) {\n    this.writeValue(event.target.value);\n    this._onChange(this._value);\n    this._onTouched();\n  }\n\n  writeValue(value: Date | string) {\n    if (!value) {\n      this._value = null;\n    }\n    const _localeKey = this._localeService.currentLocale;\n    const _locale = getLocale(_localeKey);\n    if (!_locale) {\n      throw new Error(\n        `Locale \"${_localeKey}\" is not defined, please add it with \"defineLocale(...)\"`\n      );\n    }\n    if (typeof value === 'string') {\n      const date = new Date(_locale.preparse(value));\n      this._value = isNaN(date.valueOf()) ? null : date;\n    }\n\n    if (value instanceof Date) {\n      this._value = value;\n    }\n\n    this._picker.bsValue = this._value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._picker.isDisabled = isDisabled;\n    if (isDisabled) {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this._renderer.removeAttribute(this._elRef.nativeElement, 'disabled');\n  }\n\n  registerOnChange(fn: (value: any) => any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this._onTouched = fn;\n  }\n\n  onBlur() {\n    this._onTouched();\n  }\n\n  hide() {\n    this._picker.hide();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[bsDatepicker]`,\n  host: {\n    '(change)': 'onChange($event)',\n    '(keyup.esc)': 'hide()',\n    '(blur)': 'onBlur()'\n  },\n  providers: [BS_DATEPICKER_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatepickerDirective, decorators: [{ type: Host }, ]},\n{type: BsLocaleService, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}